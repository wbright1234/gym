{"version":3,"sources":["assets/img/png/login-right.png","assets/img/svg/mail.svg","assets/img/svg/building.svg","assets/img/svg/check-circle.svg","assets/img/svg/calendar-grey.svg","assets/img/svg/cancel.svg","assets/img/png/homepage-logo.png","assets/img/svg/user.svg","assets/img/svg/smartphone.svg","assets/img/png/homepage-top-right-line.png","assets/img/png/homepage-calendar.png","assets/img/png/homepage-bottom-left.png","assets/img/svg/avatar.svg","assets/img/svg/calendar-blue.svg","assets/img/svg/menu-blue.svg","assets/img/svg/menu.svg","assets/img/svg/plus.svg","assets/img/svg/remove.svg","assets/img/svg/stripe_subscription_left.svg","assets/img/svg/stripe_subscription_right.svg","assets/img/svg/card.svg","assets/img/svg/paypal.svg","history.js","APIs.js","containers/SignUp.js","modals/WaitingConfirmationModal.js","redux/user/actions.js","containers/SignIn.js","modals/AdminSignUpDoneModal.js","containers/SignUpPhoneVerification.js","containers/SignInPhoneVerification.js","containers/Homepage.js","containers/ForgotPassword.js","components/Headerbar.js","components/MainMenus.js","components/FullCalendarItem.js","components/Datepicker.js","utils.js","modals/SignCOVIDModal.js","modals/AlertModal.js","modals/AddBookingModal.js","containers/DetailedCalendar.js","components/CalendarPagination.js","containers/FullCalendar.js","containers/Registrations.js","containers/Bookings.js","modals/AddDoormanModal.js","containers/AddDoormen.js","modals/EditApartmentModal.js","containers/Apartments.js","components/TimePicker.js","containers/Setting.js","containers/Subscription.js","containers/Dashboard.js","containers/ResetPassword.js","components/InjectedCardSection.js","modals/SignUpDoneModal.js","containers/SubscriptionPayment.js","serviceWorker.js","redux/user/reducer.js","redux/index.js","index.js","assets/img/svg/padlock.svg","assets/img/png/login-left.png"],"names":["module","exports","createBrowserHistory","dotenv","config","accessToken","authInstance","axios","create","baseURL","process","timeout","apiInstance","interceptors","request","use","headers","err","Promise","reject","a","refreshToken","ls","get","isJWT","newToken","data","tokenExpired","contentType","url","additionalHeaders","authorization","jwtDecode","exp","Date","now","res","rej","post","then","resp","catch","console","log","response","status","set","history","push","setAccessToken","token","getAccessToken","shareholderRegister","params","adminRegister","confirmPhoneVerification","userLogin","getBuildings","getSubscriptionOptions","getPendingRegistrations","acceptRegistration","rejectRegistration","getUserInfo","editApartment","deleteApartment","delete","getBookings","saveBooking","cancelBooking","getBookingsAtMonth","getBookedTimeSlots","getDoormen","addDoorman","cancelDoorman","getApartments","saveBookDateLimit","saveTimeSlots","getTimeSlots","createStripeCustomer","deleteStripeCustomer","createStripeSubscription","retrySubscriptionInvoice","updateSubscriptionStatus","updateStripeSubscription","cancelSubscription","createFormData","fields","formData","FormData","_","forEach","value","key","append","uploadCertificate","uploadListener","onUploadProgress","resetPassword","storePassword","userSignout","SignUp","props","onGetBuildings","APIs","setState","buildings","state","onSignUp","name","email","password","phoneNumber","aptNumber","agreePolicy","accountType","buildingName","registrationCapacity","buildingId","recaptcha","isEmail","isMobilePhone","alert","type","message","isNumeric","isRegistering","role","userId","stripeCustomerId","id","doneSignUp","admin","renderBuildingOptions","buildingOptions","map","building","adminId","recaptchaRef","React","createRef","nameErr","emailErr","passwordErr","phoneNumberErr","aptNumberErr","buildingNameErr","registrationCapacityErr","buildingError","this","className","Row","Col","xs","lg","alt","src","require","width","Card","isMobile","ButtonGroup","onClick","FormGroup","Form","InputGroup","InputGroupAddon","addonType","InputGroupText","height","Input","placeholder","onChange","event","target","invalid","FormFeedback","autoComplete","e","onSubmit","ref","sitekey","theme","children","href","Alert","color","loading","disabled","tag","Component","WaitingConfirmationModal","isOpen","toggle","Modal","centered","updateUser","createActions","user","SignIn","onSignIn","rememberMe","isLoggingIn","phone_verify","subscribedPlan","confirmed","waitingConfirmation","style","margin","connect","dispatch","AdminSignUpDoneModal","onClose","ModalBody","SignUpPhoneVerification","onVerify","code","length","onConfirmPhoneVerification","location","display","alignItems","justifyContent","marginTop","fontWeight","fontSize","autoFocus","SignInPhoneVerification","HomePage","md","fontStyle","ForgotPassword","sendingEmail","Headerbar","isOpenPopover","showPopover","togglePopover","onSignout","cursor","upperFirst","Popover","placement","MainMenus","menus","activeMenu","onChangeMenu","Navbar","expand","NavbarToggler","Collapse","navbar","Nav","menu","index","NavItem","FullCalendarItem","date","day","onClickItem","bookingsInDay","xl","sm","times","backgroundColor","aptColorHex","Datepicker","disablePastDt","current","yesterday","moment","subtract","isAfter","onDateChanged","timeFormat","dateFormat","isValidDate","inputProps","getDayName","SignCOVIDModal","onOpened","activeBooking","aptName","onClosed","startedSign","tmr","clearInterval","resetIsSupported","window","Reset","ClearTablet","SetTabletState","startSignOrClear","IsSigWebInstalled","getResetSupported","ctx","document","getElementById","getContext","SetDisplayXSize","SetDisplayYSize","SetJustifyMode","isOlderSigWebVersionInstalled","cmprVer","sigWebVer","GetSigWebVersion","isOlderVersion","oldVer","newVer","oldParts","split","newParts","i","parseInt","b","saveCertificate","NumberOfTabletPoints","saving","modalBody","modalArea","getBoundingClientRect","html2canvas","scrollX","scrollY","canvas","filename","certFile","dataurl","arr","mime","match","bstr","atob","n","u8arr","Uint8Array","charCodeAt","File","dataURLToFile","toDataURL","bookingId","file","onSavedCert","percentCompleted","Math","round","loaded","total","onTodayDateChanged","dateTime","todayDate","toDate","size","Helmet","Label","row","ModalFooter","AlertModal","title","body","errorMsg","inProgress","posBtnTitle","negBtnTitle","onClickPositive","onClickNegative","ModalHeader","lineHeight","AddBookingModal","slot","startTimeArr","start","endTimeArr","end","startTime","startMins","timeSlots","fullTimeSlots","initTimeSlots","certUrl","showConfirmResignModal","signedCOVID","openSignCOVIDDialog","showSignCOVIDModal","deleteBooking","deletingBook","showConfirmDeleteModal","onDeleteBooking","bookingDate","bookingTime","bookingNote","timeObj","find","time","setHours","setMinutes","userName","userPhoneNumber","userRole","bookedDateTime","savingBook","onBookDone","filterDate","setSeconds","fetchingBookedSlots","bookedTimeSlots","filter","findIndex","bSlot","getHours","getMinutes","d","aptNumbers","aptNames","booking","onChangeAPTNumber","apt","renderTimeSlots","slotOptions","label","undefined","bookingNoteErr","bookingDateTime","note","last","DetailedCalendar","startMin","startValue","endValue","bookings","showBookingModal","onAddedBooking","downloadAllCerts","selectedMonth","certUrls","without","zip","JSZip","zipFilename","getFullYear","getMonth","getDate","count","cert","format","JSZipUtils","getBinaryContent","binary","generateAsync","content","saveAs","remove","scrollRef","slotWidth","slotHeight","scrollTo","numDays","firstDay","timeId","innerRef","vertical","dayId","bookingInSlot","bookedDate","bookedHour","bookedMin","setDate","truncate","CalendarPagination","activeIndex","onPaginate","Pagination","PaginationItem","active","PaginationLink","FullCalendar","apartments","showDetailedCalendar","detailedCalendarDate","curDate","setMonth","selectedPagination","getDaysInMonth","year","month","filterMonth","getBookingsInDay","getFirstDayOfMonth","getDay","getDayOfDate","renderApts","screenWidth","rowCount","updateWindowDimensions","bind","addEventListener","removeEventListener","innerWidth","float","Registrations","isLoading","registrations","accept","reg","regId","activeRegistration","showRejectConfirmModal","renderRegistrations","spinner","ListGroup","ListGroupItem","Bookings","trackScrolling","wrappedElement","isBottom","loadingMore","offset","totalCount","limit","showOldBooking","newBooking","cancelBook","downloadCovidCert","fetch","blob","URL","createObjectURL","createElement","download","click","editBooking","renderBookings","el","bottom","innerHeight","AddDoormanModal","onAddDoorman","activeDoorman","confirmPassword","validator","addingDoorman","onAddedDoorman","confirmPasswordErr","AddDoormen","doormen","doorman","showAddDoormanModal","showConfirmCancelModal","doormanId","cancellingDoorman","m","renderDoormen","man","EditApartmentModal","activeApt","names","save","aptId","onEditDone","namesErr","showColorPicker","positive","zIndex","hex","Apartments","deleteApt","deletingApt","showEditAptModal","Button","SlotTimePicker","rest","popupClassName","showSecond","hideDisabledOptions","minuteStep","use12Hours","disabledHours","allowEmpty","inputReadOnly","Setting","onGetTimeSlots","localId","onChangeStartTime","v","item","onChangeEndTime","onChangeBookingLimit","selectedLimit","bookingDateLimit","booking_limit","addNewTimeSlot","isSame","isValid","removeLastTimeSlot","onRenderTimeSlots","TimePicker","onSaveTimeSlots","slotparam","textAlign","rel","Subscription","onMonthlySelect","plan","changePlan","showUpgradeConfirmModal","onQuarterlySelect","onBiYearlySelect","upgradePlan","upgradingPlan","monthly_price","monthly_save","quarterly_price","quarterly_save","biyearly_price","biyearly_save","onGetSubscriptionOptions","buttonborder","borderColor","borderWidth","typeStyle","priceStyle","opacity","adminMenus","doormenMenus","shareholderMenus","Dashboard","success","createdAt","isLoggedIn","userData","to","pathname","ResetPassword","passwordError","sending","confirmPasswordError","CARD_ELEMENT_OPTIONS","base","fontFamily","fontSmoothing","iconColor","CardSection","stripe","border","options","onReady","element","onCardElementReady","InjectedCardSection","elements","SignUpDoneModal","checked","SubscriptionPayment","handlePaymentThatRequiresCustomerAction","subscription","invoice","priceId","paymentMethodId","isRetry","paymentIntent","payment_intent","latest_invoice","confirmCardPayment","client_secret","payment_method","result","error","Error","handleRequiresPaymentMethod","retryInvoiceWithNewPaymentMethod","invoiceId","onSubscriptionComplete","subscribing","subscriptionId","doneSubscribe","onConfirm","cardElement","latestInvoicePaymentIntentStatus","pStripeCustomerId","latestPlan","createPaymentMethod","card","paymentMethod","items","price","priceFont","nonSelectedRadioBorder","selectedRadioBorder","background","Boolean","hostname","initialState","subscribedAt","handleActions","action","payload","middlewares","enhancers","applyMiddleware","composedEnhancers","compose","rootReducers","combineReducers","persistConfig","storage","persistedReducer","persistReducer","store","createStore","persistor","persistStore","configureStore","stripePromise","loadStripe","rootElement","rootDOM","fonts","cssSrc","path","exact","component","Homepage","render","SignUpPhoneVerify","SignInPhoneVerify","hasChildNodes","ReactDOM","hydrate","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e3b10074.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/login-right.3930d683.png\";","module.exports = __webpack_public_path__ + \"static/media/mail.857a6c24.svg\";","module.exports = __webpack_public_path__ + \"static/media/building.f3cb86f1.svg\";","module.exports = __webpack_public_path__ + \"static/media/check-circle.8550d38a.svg\";","module.exports = __webpack_public_path__ + \"static/media/calendar-grey.df3f9cb5.svg\";","module.exports = __webpack_public_path__ + \"static/media/cancel.e9c815eb.svg\";","module.exports = __webpack_public_path__ + \"static/media/homepage-logo.64215d19.png\";","module.exports = __webpack_public_path__ + \"static/media/user.178a3833.svg\";","module.exports = __webpack_public_path__ + \"static/media/smartphone.6d5a4336.svg\";","module.exports = __webpack_public_path__ + \"static/media/homepage-top-right-line.c7e12310.png\";","module.exports = __webpack_public_path__ + \"static/media/homepage-calendar.3fc0d375.png\";","module.exports = __webpack_public_path__ + \"static/media/homepage-bottom-left.c515f57e.png\";","module.exports = __webpack_public_path__ + \"static/media/avatar.6b81faf2.svg\";","module.exports = __webpack_public_path__ + \"static/media/calendar-blue.a0335ee1.svg\";","module.exports = __webpack_public_path__ + \"static/media/menu-blue.1ddcad88.svg\";","module.exports = __webpack_public_path__ + \"static/media/menu.34bda4c1.svg\";","module.exports = __webpack_public_path__ + \"static/media/plus.56f0e7e9.svg\";","module.exports = __webpack_public_path__ + \"static/media/remove.12333ffe.svg\";","module.exports = __webpack_public_path__ + \"static/media/stripe_subscription_left.d35efd12.svg\";","module.exports = __webpack_public_path__ + \"static/media/stripe_subscription_right.9902eafd.svg\";","module.exports = __webpack_public_path__ + \"static/media/card.285a430a.svg\";","module.exports = __webpack_public_path__ + \"static/media/paypal.2d52b484.svg\";","import { createBrowserHistory } from 'history';\nexport default createBrowserHistory();\n","import axios from 'axios';\nimport isJWT from 'validator/lib/isJWT';\nimport ls from 'local-storage';\nimport jwtDecode from 'jwt-decode';\nimport history from 'history.js';\nimport _ from 'lodash';\nimport dotenv from 'dotenv';\ndotenv.config();\n\nlet accessToken = '';\nconst authInstance = axios.create({\n  baseURL: process.env.REACT_APP_API_BASE_URL,\n  timeout: 30000\n})\n\nconst apiInstance = axios.create({\n  baseURL: process.env.REACT_APP_API_BASE_URL,\n  timeout: 120000\n})\n\nauthInstance.interceptors.request.use(config => {\n  return { ...config, headers: { ...config.headers, \"Content-Type\": \"application/json\" } };\n}, err => {\n  return Promise.reject(err);\n})\n\napiInstance.interceptors.request.use(async config => {\n  const refreshToken = ls.get('refreshToken');\n  if (!accessToken && !refreshToken) {\n    return Promise.reject('Access token cannot be null');\n  }\n\n  if (isJWT(refreshToken) && !accessToken) {\n    accessToken = (await newToken()).data.accessToken;\n  }\n\n  if (!isJWT(accessToken)) {\n    return Promise.reject('Access token is invalid');\n  }\n\n  if (tokenExpired(accessToken)) {\n    accessToken = (await newToken()).data.accessToken;\n  }\n  const contentType = config.url === 'uploadCertificate' ? 'multipart/form-data' :'application/json';\n  let additionalHeaders = { authorization: 'Bearer ' + accessToken, 'Content-Type': contentType };\n  return { ...config, headers: { ...config.headers, ...additionalHeaders } };\n}, err => {\n  return Promise.reject(err);\n})\n\nconst tokenExpired = (accessToken) => {\n  const { exp } = jwtDecode(accessToken);\n  return exp * 1000 <= Date.now();\n}\n\nconst newToken = () => {\n  return new Promise((res, rej) => {\n    // const refreshToken = ls.get('refreshToken');\n    const refreshToken = ls.get('refreshToken');\n    authInstance.post('token', { refreshToken }).then(resp => {\n      res(resp.data);\n    }).catch(err => {\n      console.log('New Token err: ', err);\n      rej(err);\n    });\n  });\n}\n\napiInstance.interceptors.response.use(resp => {\n  return resp;\n}, err => {\n  if (err.response) {\n    console.log(err.response);\n    const { status } = err.response;\n    if (status === 405) { // Invalid refresh token.\n      ls.set('isLoggedIn', false);\n      ls.set('refreshToken', null);\n      ls.set('email', null);\n      ls.set('password', null);\n      history.push('/');\n    }\n  }\n  return Promise.reject(err);\n})\n\nclass APIs {\n  setAccessToken = (token) => accessToken = token;\n  getAccessToken = () => accessToken;\n  shareholderRegister = (params) => authInstance.post('shareholderRegister', params);\n  adminRegister = (params) => authInstance.post('adminRegister', params);\n  confirmPhoneVerification = (params) => authInstance.post('confirmPhoneVerification', params);\n  userLogin = (params) => authInstance.post('userLogin', params);\n  getBuildings = () => authInstance.post('getBuildings');\n  getSubscriptionOptions = () => authInstance.post('getSubscriptionOptions');\n  getPendingRegistrations = (params) => apiInstance.post('getPendingRegistrations', params);\n  acceptRegistration = (params) => apiInstance.post('acceptRegistration', params);\n  rejectRegistration = (params) => apiInstance.post('rejectRegistration', params);\n  getUserInfo = () => apiInstance.get('getUserInfo');\n  editApartment = (params) => apiInstance.post('editApartment', params);\n  deleteApartment = (params) => apiInstance.delete('deleteApartment', { params });\n  getBookings = (params) => apiInstance.get('getBookings', { params });\n  saveBooking = (params) => apiInstance.post('saveBooking', params);\n  cancelBooking = (params) => apiInstance.delete('cancelBooking', { params });\n  getBookingsAtMonth = (params) => apiInstance.get('getBookingsAtMonth', { params });\n  getBookedTimeSlots = (params) => apiInstance.get('getBookedTimeSlots', { params });\n  getDoormen = (params) => apiInstance.post('getDoormen', params);\n  addDoorman = (params) => apiInstance.post('addDoorman', params);\n  cancelDoorman = (params) => apiInstance.delete('cancelDoorman', { params });\n  getApartments = (params) => apiInstance.post('getApartments', params);\n  saveBookDateLimit = (params) => apiInstance.post('saveBookDateLimit', params);\n  saveTimeSlots = (params) => apiInstance.post('saveTimeSlots', params);\n  getTimeSlots = (params) => apiInstance.post('getTimeSlots', params);\n  // stripe apis\n  createStripeCustomer = (params) => authInstance.post('createStripeCustomer', params);\n  deleteStripeCustomer = (params) => apiInstance.delete('deleteStripeCustomer', { data: params });\n  createStripeSubscription = (params) => authInstance.post('createStripeSubscription', params);\n  retrySubscriptionInvoice = (params) => authInstance.post('retrySubscriptionInvoice', params);\n  updateSubscriptionStatus = (params) => authInstance.post('updateSubscriptionStatus', params);\n  updateStripeSubscription = (params) => apiInstance.post('updateStripeSubscription', params);\n  cancelSubscription = (params) => apiInstance.delete('cancelSubscription', { data: params });\n  createFormData = (fields) => {\n    const formData = new FormData();\n    _.forEach(fields, (value, key) => {\n      formData.append(key, value);\n    });\n    return formData;\n  }\n  uploadCertificate = (params, uploadListener) => apiInstance.post('uploadCertificate', this.createFormData(params), { onUploadProgress: uploadListener })\n  resetPassword = (params) => authInstance.post('resetPassword', params);\n  storePassword = (params) => authInstance.post('storePassword', params);\n  userSignout = () => apiInstance.delete('userSignout', { params: { refreshToken: ls.get('refreshToken') } });\n}\n\nexport default new APIs();\n","import React from 'react';\nimport { Alert, Card, Row, Col, Form, FormGroup, FormFeedback, Input, InputGroup, InputGroupText, InputGroupAddon, ButtonGroup } from 'reactstrap';\nimport Button from 'reactstrap-button-loader'\nimport { Checkbox } from 'react-input-checkbox';\nimport APIs from 'APIs';\nimport { isEmail, isMobilePhone, isNumeric } from 'validator';\nimport { isMobile, BrowserView, MobileView } from 'react-device-detect';\nimport ReCAPTCHA from \"react-google-recaptcha\";\n\nexport default class SignUp extends React.Component {\n  constructor(props) {\n    super(props);\n    this.recaptchaRef = React.createRef();\n    this.state = {\n      alert: {\n        type: '',\n        message: ''\n      },\n      name: '',\n      nameErr: '',\n      email: '',\n      emailErr: '',\n      password: '',\n      passwordErr: '',\n      phoneNumber: '',\n      phoneNumberErr: '',\n      aptNumber: '',\n      aptNumberErr: '',\n      buildingName: '',\n      buildingNameErr: '',\n      registrationCapacity: '',\n      registrationCapacityErr: '',\n      agreePolicy: false,\n      isRegistering: false,\n      doneSignUp: false,\n      accountType: 0,\n      buildingId: 0,\n      buildingError: '',\n      buildings: [],\n      recaptcha: false\n    }    \n  }\n\n  componentDidMount() {\n    this.onGetBuildings();\n  }\n\n  onGetBuildings = () =>  {\n    APIs.getBuildings().then(resp => {\n      let { data } = resp.data;\n      this.setState({\n        buildings: [...this.state.buildings, ...data],\n      });\n    });\n  }\n\n  onSignUp = () => {\n    const { name, email, password, phoneNumber, aptNumber, agreePolicy, accountType, buildingName, registrationCapacity, buildingId, recaptcha } = this.state;\n    if (!name) {\n      //this.setState({ nameErr: 'Invalid name' });\n      this.setState({ alert: { type: 'danger', message: 'Invalid name' } });\n      return;\n    }\n    if (!email || !isEmail(email)) {\n      //this.setState({ emailErr: 'Invalid email' });\n      this.setState({ alert: { type: 'danger', message: 'Invalid email' } });\n      return;\n    }\n    if (!password) {\n      //this.setState({ passwordErr: 'Invalid password' });\n      this.setState({ alert: { type: 'danger', message: 'Invalid password' } });\n      return;\n    }\n    if (!phoneNumber || !isMobilePhone(phoneNumber)) {\n      //this.setState({ phoneNumberErr: 'Invalid phone number' });\n      this.setState({ alert: { type: 'danger', message: 'Invalid phone number' } });\n      return;\n    }\n    if ( accountType === 1) {\n      if ( buildingId === 0 ) {\n        //this.setState({ buildingError: 'Invalid building' });\n        this.setState({ alert: { type: 'danger', message: 'Invalid building' } });\n        return;\n      }\n      if (!aptNumber) {\n        //this.setState({ aptNumberErr: 'Invalid apartment number' });\n        this.setState({ alert: { type: 'danger', message: 'Invalid apartment number' } });\n        return;\n      }\n    } else if ( accountType === 0 ) {\n      if ( !buildingName ) {\n        //this.setState({ buildingNameErr: 'Invalid building name' });\n        this.setState({ alert: { type: 'danger', message: 'Invalid building name' } });\n        return;\n      }\n      if ( !registrationCapacity || registrationCapacity===0 || !isNumeric(registrationCapacity) ) {\n        //this.setState({ registrationCapacityErr: 'Invalid building registration capactiy' });\n        this.setState({ alert: { type: 'danger', message: 'Invalid building registration capactiy' } });\n        return;\n      }\n    }\n\n    if (!agreePolicy) {\n      this.setState({ alert: { type: 'danger', message: 'You must agree terms of service and privacy policy' } });\n      return;\n    }\n    \n    if (!recaptcha) {\n      this.setState({ alert: { type: 'danger', message: 'You must check you are not robot' } });\n      return;\n    }\n    \n    if ( accountType === 1 ) {\n      this.setState({ isRegistering: true, alert: { type: '', message: '' } });\n      var params = { name, email, password, phoneNumber, aptNumber, buildingId, role: 'shareholder' };\n      APIs.shareholderRegister(params).then(resp => {       \n        const userId = resp.data.userId;\n        params = { userId, email, name };\n        APIs.createStripeCustomer(params).then(resp => {   \n          const stripeCustomerId = resp.data.data.id;    \n          this.setState({ isRegistering: false, doneSignUp: true });\n          this.props.history.push('/signup-phone-confirm', {admin: false, userId: userId, stripeCustomerId: stripeCustomerId});\n        });        \n      }).catch(err => {\n        let message = err.message;\n        if (err.response) { \n          message = err.response.data.message;\n        }\n        this.setState({ isRegistering: false, alert: { type: 'danger', message } });\n      });\n    } else if ( accountType === 0 ) {\n      this.setState({ isRegistering: true, alert: { type: '', message: '' } });    \n      const params = { name, email, password, phoneNumber, buildingName, registrationCapacity, role: 'admin' };\n      APIs.adminRegister(params).then(resp => {        \n        this.setState({ isRegistering: false, doneSignUp: true });\n        this.props.history.push('/signup-phone-confirm', {admin: true, userId: resp.data.userId});\n      }).catch(err => {\n        let message = err.message;\n        if (err.response) {\n          message = err.response.data.message;\n        }\n        this.setState({ isRegistering: false, alert: { type: 'danger', message } });\n      });\n    }\n  }\n\n  renderBuildingOptions = () => {\n    const { buildings } = this.state;\n    var buildingOptions = [];\n    buildingOptions.push(<option key={0} value={0}>Select building</option>);\n    buildings.map( building => {\n      buildingOptions.push(<option key={building.adminId} value={building.id}>{building.buildingName}</option>);\n    });\n    return buildingOptions;\n  }\n\n  render() {\n    const {\n      alert, name, nameErr, email, emailErr, password, passwordErr, phoneNumber, phoneNumberErr, aptNumber, aptNumberErr, agreePolicy, isRegistering, \n      accountType, buildingName, buildingNameErr, registrationCapacity, registrationCapacityErr, buildingId, buildingError\n    } = this.state;\n\n    return (\n      <div className='d-flex flex-column flex-fill'>\n        <Row className='h-100'>\n          <Col xs='12' lg='6' className=\"d-flex flex-column flex-fill justify-content-center\">\n              <img alt='...' src={require('assets/img/png/login-left.png')} className='login-left-img' />\n          </Col>\n          <Col xs='12' lg='6' className='d-flex flex-column align-items-center justify-content-center'>\n            <img alt='...' src={require('assets/img/png/homepage-logo.png')} width={400} />\n            <Card className={'d-flex flex-column align-items-center border-1 bg-white mt-4 ' + (isMobile ? 'w-90' : 'w-75')}>\n              <h4 className='blue-tint text-bold mt-3'>Sign Up</h4>\n              <h5 className='blue-tint mt-1'>Create your Account</h5>\n              <ButtonGroup className='w-90 mt-3'>\n                <Button \n                  className={accountType===0 ? \"bg-blue text-white border-0 w-50\" : \"bg-white tint-color border-tint w-50\"}\n                  onClick={()=> { this.setState({accountType: 0}); }}>Admin</Button>\n                <Button \n                  className={accountType===1 ? \"bg-blue text-white border-0 w-50\" : \"bg-white tint-color border-tint w-50\"}\n                  onClick={()=> { this.setState({accountType: 1}); }}>Shareholder</Button>\n              </ButtonGroup>\n              <FormGroup className='w-90'>\n                <Form className='mt-3'>\n                  <InputGroup>\n                    <InputGroupAddon addonType='prepend'>\n                      <InputGroupText className='bg-white border-top-0 border-left-0 border-right-0 rounded-0'>\n                        <img alt='...' src={require('assets/img/svg/user.svg')} width={20} height={20} />\n                      </InputGroupText>\n                    </InputGroupAddon>\n                    <Input type='email'\n                      placeholder='Enter your name'\n                      className='border-top-0 border-left-0 border-right-0 rounded-0'\n                      value={name}\n                      onChange={event => this.setState({ name: event.target.value, nameErr: '' })}\n                      invalid={nameErr ? true : false} />\n                  </InputGroup>\n                </Form>\n                <FormFeedback>{nameErr}</FormFeedback>\n                <Form className='mt-4' autoComplete='off'>\n                  <InputGroup>\n                    <InputGroupAddon addonType='prepend'>\n                      <InputGroupText className='bg-white border-top-0 border-left-0 border-right-0 rounded-0'>\n                        <img alt='...' src={require('assets/img/svg/mail.svg')} width={20} height={20} />\n                      </InputGroupText>\n                    </InputGroupAddon>\n                    <Input type='email'\n                      placeholder='Enter your email'\n                      className='border-top-0 border-left-0 border-right-0 rounded-0'\n                      value={email}\n                      onChange={event => this.setState({ email: event.target.value, emailErr: '' })}\n                      invalid={emailErr ? true : false} />\n                  </InputGroup>\n                </Form>\n                <FormFeedback>{emailErr}</FormFeedback>\n                <Form className='mt-4' autoComplete='off'>\n                  <InputGroup>\n                    <InputGroupAddon addonType='prepend'>\n                      <InputGroupText className='bg-white border-top-0 border-left-0 border-right-0 rounded-0'>\n                        <img alt='...' src={require('assets/img/svg/padlock.svg')} width={20} height={20} />\n                      </InputGroupText>\n                    </InputGroupAddon>\n                    <Input type='password'\n                      placeholder='Enter your password'\n                      className='border-top-0 border-left-0 border-right-0 rounded-0'\n                      value={password}\n                      onChange={event => this.setState({ password: event.target.value, passwordErr: '' })}\n                      invalid={passwordErr ? true : false} />\n                  </InputGroup>\n                </Form>\n                <FormFeedback>{passwordErr}</FormFeedback>\n                <Form className='mt-4' autoComplete='off'>\n                  <InputGroup>\n                    <InputGroupAddon addonType='prepend'>\n                      <InputGroupText className='bg-white border-top-0 border-left-0 border-right-0 rounded-0'>\n                        <img alt='...' src={require('assets/img/svg/smartphone.svg')} width={20} height={20} />\n                      </InputGroupText>\n                    </InputGroupAddon>\n                    <Input type='tel'\n                      placeholder='Enter your phone number'\n                      className='border-top-0 border-left-0 border-right-0 rounded-0'\n                      value={phoneNumber}\n                      onChange={event => this.setState({ phoneNumber: event.target.value, phoneNumberErr: '' })}\n                      invalid={phoneNumberErr ? true : false} />\n                  </InputGroup>\n                </Form>\n                <FormFeedback>{phoneNumberErr}</FormFeedback>\n                { accountType === 1 ? \n                  <>                    \n                    <Form className='mt-4'>\n                      <InputGroup>\n                        <InputGroupAddon addonType='prepend'>\n                          <InputGroupText className='bg-white border-top-0 border-left-0 border-right-0 border-bottom-0 rounded-0'>\n                            <img alt='...' src={require('assets/img/svg/building.svg')} width={20} height={20} />\n                          </InputGroupText>\n                        </InputGroupAddon>\n                        <Input type='select'\n                          value={buildingId}\n                          onChange={e => this.setState({ buildingId: e.target.value })}\n                          invalid={buildingError ? true : false} >\n                          {this.renderBuildingOptions()}\n                        </Input>\n                      </InputGroup>\n                    </Form>\n                    <FormFeedback>{buildingError}</FormFeedback>\n                    <Form className='mt-4'>\n                      <InputGroup>\n                        <InputGroupAddon addonType='prepend'>\n                          <InputGroupText className='bg-white border-top-0 border-left-0 border-right-0 rounded-0'>\n                            <img alt='...' src={require('assets/img/svg/padlock.svg')} width={20} height={20} />\n                          </InputGroupText>\n                        </InputGroupAddon>\n                        <Input type='text'\n                          placeholder='Enter your apartment number'\n                          className='border-top-0 border-left-0 border-right-0 rounded-0'\n                          value={aptNumber}\n                          onChange={event => this.setState({ aptNumber: event.target.value, aptNumberErr: '' })}\n                          invalid={aptNumberErr ? true : false} />\n                      </InputGroup>\n                    </Form>\n                    <FormFeedback>{aptNumberErr}</FormFeedback>\n                  </> : \n                  <>\n                    <Form className='mt-4'>\n                      <InputGroup>\n                        <InputGroupAddon addonType='prepend'>\n                          <InputGroupText className='bg-white border-top-0 border-left-0 border-right-0 rounded-0'>\n                            <img alt='...' src={require('assets/img/svg/building.svg')} width={20} height={20} />\n                          </InputGroupText>\n                        </InputGroupAddon>\n                        <Input type='text'\n                          placeholder='Enter your building name'\n                          className='border-top-0 border-left-0 border-right-0 rounded-0'\n                          value={buildingName}\n                          onChange={event => this.setState({ buildingName: event.target.value, buildingNameErr: '' })}\n                          invalid={buildingNameErr ? true : false} />\n                      </InputGroup>\n                    </Form>\n                    <FormFeedback>{buildingNameErr}</FormFeedback>\n                    <Form className='mt-4'>\n                      <InputGroup>\n                        <InputGroupAddon addonType='prepend'>\n                          <InputGroupText className='bg-white border-top-0 border-left-0 border-right-0 rounded-0'>\n                            <img alt='...' src={require('assets/img/svg/building.svg')} width={20} height={20} />\n                          </InputGroupText>\n                        </InputGroupAddon>\n                        <Input type='text'\n                          placeholder='Enter building registration capacity'\n                          className='border-top-0 border-left-0 border-right-0 rounded-0'\n                          value={registrationCapacity}\n                          onChange={event => this.setState({ registrationCapacity: event.target.value, registrationCapacityErr: '' })}\n                          invalid={registrationCapacityErr ? true : false} />\n                      </InputGroup>\n                    </Form>\n                    <FormFeedback>{registrationCapacityErr}</FormFeedback>\n                  </>\n                }                \n              </FormGroup>\n              <form onSubmit={this.onSubmit} >\n                <ReCAPTCHA\n                  ref={this.recaptchaRef}\n                  sitekey=\"6Lfi2t4ZAAAAAPhZ9i7b7XHumMALMomkDvdsncOo\"\n                  onChange={(value) => { this.setState({recaptcha: true}) }}\n                />\n              </form>\n              <div className={'d-flex align-items-center'}>\n                <Checkbox\n                  theme='bootstrap-checkbox'\n                  value={agreePolicy}\n                  onChange={() => this.setState({ agreePolicy: !this.state.agreePolicy })}\n                  children={<span></span>}\n                  />\n                <BrowserView>\n                  <small className='ml-2'>I agree to the</small>\n                  <small className='blue-tint'><a href='/'>&nbsp;Terms of Service</a></small>\n                  <small>&nbsp;and</small>\n                  <small className='blue-tint'><a href='/'>&nbsp;Privacy Policy</a></small>\n                </BrowserView>\n                <MobileView>\n                  <div className='d-flex align-items-center'>\n                    <small className='ml-2'>I agree to the</small>\n                    <small className='blue-tint'><a href='/'>&nbsp;Terms of Service</a></small>\n                    <small>&nbsp;and</small>\n                  </div>\n                  <div className='d-flex align-items-center justify-content-center'>\n                    <small className='blue-tint'><a href='/'>&nbsp;Privacy Policy</a></small>\n                  </div>\n                </MobileView>\n              </div>\n              {alert.message && <Alert color={alert.type} className='mt-3'>{alert.message}</Alert>}\n              <Button\n                className='bg-blue text-white border-0 w-90 mt-3 py-2'\n                loading={isRegistering}\n                disabled={isRegistering}\n                onClick={this.onSignUp}>\n                <strong>SIGN UP</strong>\n              </Button>\n              <div className='d-flex my-4'>\n                <h6>Already have an account?</h6>\n                <Button className='bg-transparent border-0 shadow-none p-0' tag='a' href='/sign-in'>\n                  <h6 className='mb-0 blue-tint'><strong>&nbsp;Sign In</strong></h6>\n                </Button>\n              </div>\n            </Card>\n          </Col>\n        </Row>\n        <img alt='...' src={require('assets/img/png/login-right.png')} className='login-right-img' />\n      </div>\n    )\n  }\n}\n","import React from 'react';\nimport { Modal } from 'reactstrap';\nimport Button from 'reactstrap-button-loader';\n\nexport default class WaitingConfirmationModal extends React.Component {\n  render() {\n    const { isOpen, toggle } = this.props;\n    return (\n      <Modal isOpen={isOpen} toggle={toggle} centered>\n        <div className='d-flex flex-column align-items-center justify-content-center'>\n          <img alt='...' src={require('assets/img/png/homepage-logo.png')} width={400} className=\"mt-5\" />\n          <img\n            alt='...'\n            src={require('assets/img/svg/check-circle.svg')}\n            width={150}\n            height={150}\n            className='mt-5' />\n          <h4 className='mt-5 text-center mx-4'>You will receive a confirmation email soon</h4>\n          <Button className='bg-blue text-white border-0 w-90 my-4 py-2' onClick={toggle}>\n            <strong>OK</strong>\n          </Button>\n        </div>\n      </Modal>\n    )\n  }\n}\n","import { createActions } from 'redux-actions';\n\nexport const { updateUser } = createActions({\n  updateUser: (user) => (user)\n});\n","import React from 'react';\nimport {\n  Alert,\n  Card,\n  Row,\n  Col,\n  Form,\n  FormFeedback,\n  FormGroup,\n  Input,\n  InputGroup,\n  InputGroupText,\n  InputGroupAddon\n} from 'reactstrap';\nimport Button from 'reactstrap-button-loader';\nimport { isMobile } from 'react-device-detect';\nimport { Checkbox } from 'react-input-checkbox';\nimport WaitingConfirmationModal from 'modals/WaitingConfirmationModal';\nimport APIs from 'APIs';\nimport { isEmail } from 'validator';\nimport ls from 'local-storage';\nimport { connect } from 'react-redux';\nimport { updateUser } from 'redux/user/actions';\n\nclass SignIn extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      alert: {\n        type: '',\n        message: ''\n      },\n      email: '',\n      emailErr: '',\n      password: '',\n      passwordErr: '',\n      rememberMe: false,\n      waitingConfirmation: false,\n      isLoggingIn: false\n    }\n  }\n\n  componentDidMount() {\n    if (ls.get('rememberMe')) {\n      this.setState({ email: ls.get('email'), password: ls.get('password'), rememberMe: true });\n    }\n  }\n\n  onSignIn = () => {\n    const { email, password, rememberMe } = this.state;\n    if (!email || !isEmail(email)) {\n      this.setState({ emailErr: 'Invalid email' });\n      return;\n    }\n    if (!password) {\n      this.setState({ passwordErr: 'Invalid password' });\n      return;\n    }\n    this.setState({ isLoggingIn: true, alert: { type: '', message: '' } });\n    const params = {\n      email, password\n    }\n    APIs.userLogin(params).then(resp => {\n      const { accessToken, refreshToken, user } = resp.data.data;\n      if ( user.role !== 'doorman' && !user.phone_verify) {\n        this.props.history.push('/signin-phone-confirm', {user, rememberMe, accessToken, refreshToken, email, password});\n        return;\n      }\n      if ( user.role === \"shareholder\" && !user.subscribedPlan ) {\n        this.props.history.push('/signup-subscription', {userId: user.id, stripeCustomerId: user.stripeCustomerId});\n        return;\n      }\n      if (!user.confirmed) {\n        this.setState({ waitingConfirmation: true, isLoggingIn: false });\n        return;\n      }\n      \n      this.props.updateUser(user);\n      this.setState({ isLoggingIn: false });\n      APIs.setAccessToken(accessToken);\n      ls.set('refreshToken', refreshToken);\n      ls.set('isLoggedIn', true);\n      if (rememberMe) {\n        ls.set('rememberMe', true);\n        ls.set('email', email);\n        ls.set('password', password);\n      } else {\n        ls.set('rememberMe', false);\n      }\n      this.props.history.push('/dashboard');\n    }).catch(err => {\n      let message = err.message;\n      if (err.response) {\n        message = err.response.data.message;\n      }\n      this.setState({ alert: { type: 'danger', message }, isLoggingIn: false });\n    });\n  }\n\n  render() {\n    const { alert, email, emailErr, password, passwordErr, rememberMe, waitingConfirmation, isLoggingIn } = this.state;\n\n    return (\n      <div className='d-flex flex-column flex-fill'>\n        <Row className='d-flex flex-fill' style={{margin:0}}>\n          <Col xs='12' lg='6' className=\"d-flex flex-column flex-fill justify-content-center\">\n              <img alt='...' src={require('assets/img/png/login-left.png')} className='login-left-img' />\n          </Col>\n          <Col xs='12' lg='6' className='d-flex flex-column flex-fill align-items-center justify-content-center'>\n            <img alt='...' src={require('assets/img/png/homepage-logo.png')} width={400} />\n            <Card className={'d-flex flex-column align-items-center border-1 bg-white mt-4 ' + (isMobile ? 'w-90' : 'w-75')}>\n              <h4 className='blue-tint text-bold mt-3'>Welcome Back</h4>\n              <h5 className='blue-tint mt-1'>Please log in</h5>\n              <FormGroup className='w-90'>\n                <Form className='mt-4' autoComplete='off'>\n                  <InputGroup>\n                    <InputGroupAddon addonType='prepend'>\n                      <InputGroupText className='bg-white border-top-0 border-left-0 border-right-0 rounded-0'>\n                        <img alt='...' src={require('assets/img/svg/mail.svg')} width={20} height={20} />\n                      </InputGroupText>\n                    </InputGroupAddon>\n                    <Input type='email'\n                      placeholder='Enter your email'\n                      className='border-top-0 border-left-0 border-right-0 rounded-0'\n                      value={email}\n                      onChange={event => this.setState({ email: event.target.value, emailErr: '' })}\n                      invalid={emailErr ? true : false} />\n                  </InputGroup>\n                </Form>\n                <FormFeedback>{emailErr}</FormFeedback>\n                <Form className='mt-4' autoComplete='off'>\n                  <InputGroup>\n                    <InputGroupAddon addonType='prepend'>\n                      <InputGroupText className='bg-white border-top-0 border-left-0 border-right-0 rounded-0'>\n                        <img alt='...' src={require('assets/img/svg/padlock.svg')} width={20} height={20} />\n                      </InputGroupText>\n                    </InputGroupAddon>\n                    <Input type='password'\n                      placeholder='Enter your password'\n                      className='border-top-0 border-left-0 border-right-0 rounded-0'\n                      value={password}\n                      onChange={event => this.setState({ password: event.target.value, passwordErr: '' })}\n                      invalid={passwordErr ? true : false} />\n                  </InputGroup>\n                </Form>\n                <FormFeedback>{passwordErr}</FormFeedback>\n              </FormGroup>\n              <div className={'d-flex justify-content-between mt-4 ' + (isMobile ? 'w-90' : 'w-75')}>\n                <div className='d-flex'>\n                  <Checkbox\n                    theme='bootstrap-checkbox'\n                    value={rememberMe}\n                    onChange={() => this.setState({ rememberMe: !this.state.rememberMe })}\n                    children={<span />}\n                    />\n                  <h6 className='ml-2 text-darkgray'>Remember me</h6>\n                </div>\n                <Button className='bg-transparent border-0 shadow-none p-0' tag='a' href='/forgot-password'>\n                  <h6 className='text-darkgray'>Forgot Password?</h6>\n                </Button>\n              </div>\n              {\n                alert.message && <Alert color={alert.type} className='mt-3'>{alert.message}</Alert>\n              }\n              <Button className='bg-blue text-white border-0 w-90 mt-3 py-2' loading={isLoggingIn} disabled={isLoggingIn} onClick={this.onSignIn}>\n                <strong>SIGN IN</strong>\n              </Button>\n              <div className='d-flex my-4'>\n                <h6 className='text-darkgray'>Don't have an account?</h6>\n                <Button className='bg-transparent border-0 shadow-none p-0' tag='a' href='/sign-up'>\n                  <h6 className='mb-0 blue-tint'><strong>&nbsp;Sign Up</strong></h6>\n                </Button>\n              </div>\n            </Card>\n          </Col>\n        </Row>\n        <img alt='...' src={require('assets/img/png/login-right.png')} className='login-right-img' />        \n        {\n          waitingConfirmation &&\n          <WaitingConfirmationModal\n            isOpen={waitingConfirmation}\n            toggle={() => this.setState({ waitingConfirmation: false })} />\n        }\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  user: state.user\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  updateUser: (user) => dispatch(updateUser(user))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);\n","import React from 'react';\nimport { Modal, ModalBody } from 'reactstrap';\nimport Button from 'reactstrap-button-loader';\n\nexport default class AdminSignUpDoneModal extends React.Component {\n\n  render() {\n    const { isOpen, onClose } = this.props;\n    return (\n      <Modal isOpen={isOpen} centered>        \n        <ModalBody className='d-flex flex-column align-items-center'>\n          <img alt='...' src={require('assets/img/png/homepage-logo.png')} width={400} className=\"mt-5 mb-5\" />\n          <img alt='...'\n            src={require('assets/img/svg/check-circle.svg')}\n            width={150} height={150} className='my-5' />\n          <div className='text-center'>\n            <p>\n            Thank you for registering!</p>\n          </div>\n          <Button className='bg-blue text-white border-0 w-90 my-4 py-2' onClick={onClose}>\n            <strong>OK</strong>\n          </Button>\n        </ModalBody>\n      </Modal>\n    )\n  }\n}\n","import React from 'react';\r\nimport { Alert } from 'reactstrap';\r\nimport ReactInputVerificationCode from 'react-input-verification-code';\r\nimport Button from 'reactstrap-button-loader';\r\nimport AdminSignUpDoneModal from 'modals/AdminSignUpDoneModal';\r\nimport APIs from 'APIs';\r\n\r\nclass SignUpPhoneVerification extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n\r\n      this.state = {\r\n          alert: {\r\n            type: '',\r\n            message: ''\r\n          },\r\n          doneSignUp: false,\r\n          code: '',\r\n      }\r\n    }\r\n\r\n    onConfirmPhoneVerification() {\r\n        const {code} = this.state;\r\n        const params = { userId: this.props.location.state.userId, code: code};\r\n        const { admin, userId, stripeCustomerId } = this.props.location.state;\r\n        APIs.confirmPhoneVerification(params).then(resp => {\r\n            this.setState({doneSignUp: true});\r\n            if ( admin === false ) {\r\n                this.props.history.push('/signup-subscription', {userId, stripeCustomerId})\r\n            }          \r\n        }).catch(err => {\r\n            let message = err.message;\r\n            if (err.response) {\r\n                message = err.response.data.message;\r\n            }\r\n            this.setState({alert: { type: 'danger', message } });\r\n        });\r\n    }\r\n\r\n    onVerify = () => {\r\n        const {code} = this.state;\r\n        if ( code.length === 6 ) {\r\n            this.onConfirmPhoneVerification();\r\n        } else {\r\n            this.setState({ alert: { type: 'danger', message: 'Please input verify code' } });\r\n        }\r\n    }\r\n\r\n    onChange = ( code ) => {\r\n        this.setState({code: code});\r\n    }\r\n\r\n    render() {\r\n        const {doneSignUp, alert} = this.state;\r\n        const admin = this.props.location.state.admin;\r\n\r\n        return (\r\n            <div style={{display: 'flex', alignItems: 'center', justifyContent: 'center', height: '100%'}}>\r\n                <div className='d-flex flex-column align-items-center' style={{marginTop: -200}}>\r\n                    <img alt='...' src={require('assets/img/png/homepage-logo.png')} width={300} className=\"mt-5 mb-5\" />\r\n                    <p style={{color:'#364954', fontWeight: 'Bold', fontSize: 20}} className=\"mt-5 mb-3\">\r\n                        Enter the verification code sent to you phone number\r\n                    </p>\r\n                    <ReactInputVerificationCode length={6} onChange={this.onChange} autoFocus={true} placeholder=\"\" />\r\n                    {alert.message && <Alert color={alert.type} className='mt-3'>{alert.message}</Alert>}\r\n                    <Button className='bg-blue text-white border-0 mt-5 py-2' style={{width: 400}} onClick={this.onVerify}>\r\n                        <strong>CONFIRM</strong>\r\n                    </Button>\r\n                </div>\r\n                {\r\n                doneSignUp && admin === true &&\r\n                <AdminSignUpDoneModal\r\n                    isOpen={doneSignUp}\r\n                    onClose={() => this.setState({ doneSignUp: false }, () => this.props.history.push('/sign-in'))} />\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SignUpPhoneVerification;","import React from 'react';\r\nimport { Alert } from 'reactstrap';\r\nimport ReactInputVerificationCode from 'react-input-verification-code';\r\nimport Button from 'reactstrap-button-loader';\r\nimport WaitingConfirmationModal from 'modals/WaitingConfirmationModal';\r\nimport APIs from 'APIs';\r\nimport ls from 'local-storage';\r\nimport { connect } from 'react-redux';\r\nimport { updateUser } from 'redux/user/actions';\r\n\r\nclass SignInPhoneVerification extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            alert: {\r\n                type: '',\r\n                message: ''\r\n            },\r\n            doneSignUp: false,\r\n            code: '',\r\n            waitingConfirmation: false\r\n        }\r\n    }\r\n\r\n    onConfirmPhoneVerification() {\r\n        const {code} = this.state;\r\n        const {user, rememberMe, accessToken, refreshToken, email, password} = this.props.location.state;\r\n        const params = { userId: user.id, code: code};\r\n        \r\n        console.log(params);\r\n        APIs.confirmPhoneVerification(params).then(resp => {\r\n            if (!user.confirmed) {\r\n                this.setState({ waitingConfirmation: true });\r\n                return;\r\n            }\r\n            this.props.updateUser(user);\r\n            this.setState({ isLoggingIn: false });\r\n            APIs.setAccessToken(accessToken);\r\n            ls.set('refreshToken', refreshToken);\r\n            ls.set('isLoggedIn', true);\r\n            if (rememberMe) {\r\n                ls.set('rememberMe', true);\r\n                ls.set('email', email);\r\n                ls.set('password', password);\r\n            } else {\r\n                ls.set('rememberMe', false);\r\n            }\r\n            this.props.history.push('/dashboard');\r\n        }).catch(err => {\r\n            let message = err.message;\r\n            if (err.response) {\r\n                message = err.response.data.message;\r\n            }\r\n            this.setState({alert: { type: 'danger', message } });\r\n        });\r\n    }\r\n\r\n    onVerify = () => {\r\n        const {code} = this.state;\r\n        if ( code.length === 6 ) {\r\n            this.onConfirmPhoneVerification();\r\n        } else {\r\n            this.setState({ alert: { type: 'danger', message: 'Please input verify code' } });\r\n        }\r\n    }\r\n\r\n    onChange = ( code ) => {\r\n        this.setState({code: code});\r\n    }\r\n\r\n    render() {\r\n        const {waitingConfirmation, alert} = this.state;\r\n\r\n        return (\r\n            <div style={{display: 'flex', alignItems: 'center', justifyContent: 'center', height: '100%'}}>\r\n                <div className='d-flex flex-column align-items-center' style={{marginTop: -200}}>\r\n                    <img alt='...' src={require('assets/img/png/homepage-logo.png')} width={300} className=\"mt-5 mb-5\" />\r\n                    <p style={{color:'#364954', fontWeight: 'Bold', fontSize: 20}} className=\"mt-5 mb-3\">\r\n                        Enter the verification code sent to you phone number\r\n                    </p>\r\n                    <ReactInputVerificationCode length={6} onChange={this.onChange} autoFocus={true} placeholder=\"\" />\r\n                    {alert.message && <Alert color={alert.type} className='mt-3'>{alert.message}</Alert>}\r\n                    <Button className='bg-blue text-white border-0 mt-5 py-2' style={{width: 400}} onClick={this.onVerify}>\r\n                        <strong>CONFIRM</strong>\r\n                    </Button>\r\n                </div>\r\n                {\r\n                waitingConfirmation &&\r\n                <WaitingConfirmationModal\r\n                    isOpen={waitingConfirmation}\r\n                    toggle={() => this.props.history.push('/sign-in')} />\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    user: state.user\r\n})\r\n  \r\nconst mapDispatchToProps = (dispatch) => ({\r\n    updateUser: (user) => dispatch(updateUser(user))\r\n})\r\n  \r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignInPhoneVerification);","import React from 'react';\r\nimport {\r\n    Row,\r\n    Col,\r\n  } from 'reactstrap';\r\n  import Button from 'reactstrap-button-loader';\r\n\r\nclass HomePage extends React.Component {    \r\n    onSignIn = () => {\r\n        this.props.history.push('/sign-in');\r\n    }\r\n\r\n    onSignUp = () => {\r\n        this.props.history.push('/sign-up');\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"d-flex flex-column flex-fill\">\r\n                <div className='homepage-top-height'>\r\n                    <img alt='...' src={require('assets/img/png/homepage-logo.png')} className='homepage-top-left-img' />\r\n                    <div className='homepage-top-button-group homepage-top-right'>\r\n                        <Button className='bg-white tint-color border-tint homepage-button homepage-top-login-mr' onClick={this.onSignIn}>\r\n                            <strong>Log In</strong>\r\n                        </Button>\r\n                        <Button className=\"bg-blue text-white border-0 homepage-button\" onClick={this.onSignUp}>\r\n                            <strong>Sign Up</strong>\r\n                        </Button>\r\n                    </div>\r\n                    <img alt='...' className=\"homepage-top-right-img\" src={require('assets/img/png/homepage-top-right-line.png')}/>\r\n                </div>\r\n                \r\n                <Row>\r\n                    <Col xs='12' lg='6' md='6' className='homepage-title-left-padding'>\r\n                        <label className='homepage-title-font1' style={{display:'inline'}}>The</label>&nbsp;&nbsp;\r\n                        <label className='homepage-title-font1' style={{color: '#0087B4', display:'inline', fontWeight: 'bold', fontStyle: 'italic'}}>Ultimate</label><br/>\r\n                        <label className='homepage-title-font2' style={{marginTop: -25}}>Amenity Scheduler</label><br/>\r\n                        <Button className=\"bg-blue text-white border-0 homepage-button\" onClick={this.onSignUp}>\r\n                            <strong>Get Started</strong>\r\n                        </Button>\r\n                    </Col>\r\n                    <Col xs='12' lg='6' md='6' className='homepage-calendar-img'>\r\n                        <img alt='...' src={require('assets/img/png/homepage-calendar.png')} style={{width: '80%'}}/>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <img alt='...' src={require('assets/img/png/homepage-bottom-left.png')} className='welcome-bottom-left' />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default HomePage;\r\n","import React from 'react';\nimport {\n  Alert,\n  Card,\n  Row,\n  Col,\n  Form,\n  FormGroup,\n  FormFeedback,\n  Input,\n  InputGroup,\n  InputGroupText,\n  InputGroupAddon\n} from 'reactstrap';\nimport Button from 'reactstrap-button-loader'\nimport { isMobile } from 'react-device-detect';\nimport { isEmail } from 'validator';\nimport APIs from 'APIs';\n\nexport default class ForgotPassword extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      alert: {\n        type: '',\n        message: ''\n      },\n      email: '',\n      emailErr: '',\n      sendingEmail: false\n    }\n  }\n\n  resetPassword = () => {\n    console.log('Reset password');\n    const { email } = this.state;\n    if (!email || !isEmail(email)) {\n      this.setState({ emailErr: 'Invalid email' });\n      return;\n    }\n    this.setState({ sendingEmail: true, alert: { type: '', message: '' } });\n    const params = {\n      email\n    }\n    console.log('Params: ', params);\n    APIs.resetPassword(params).then(resp => {\n      console.log('Reset password: ', resp.data);\n      this.setState({ sendingEmail: false, alert: { type: 'success', message: 'Reset password link sent to your email' } });\n    }).catch(err => {\n      console.log('Reset password err: ', err);\n      let message = err.message;\n      if (err.response) {\n        message = err.response.data.message;\n      }\n      this.setState({ sendingEmail: false, alert: { type: 'danger', message } });\n    });\n  }\n\n  render() {\n    const { alert, email, emailErr, sendingEmail } = this.state;\n    return (\n      <div className='d-flex flex-column flex-fill'>\n        <Row className='d-flex flex-fill'>\n          <Col xs='12' lg='6' className=\"d-flex flex-column flex-fill justify-content-center\">\n              <img alt='...' src={require('assets/img/png/login-left.png')} className='login-left-img' />\n          </Col>\n          <Col xs='12' lg='6' className='d-flex flex-column flex-fill align-items-center justify-content-center'>\n            <img alt='...' src={require('assets/img/png/homepage-logo.png')} width={400} />\n            <Card className={'d-flex flex-column align-items-center border-1 bg-white mt-4 ' + (isMobile ? 'w-90' : 'w-75')}>\n              <h4 className='blue-tint text-bold mt-3'>Password Recovery</h4>\n              <h5 className='blue-tint mt-1'>Let's get your password back</h5>\n              <FormGroup className='w-90'>\n                <Form className='mt-4' autoComplete='off'>\n                  <InputGroup>\n                    <InputGroupAddon addonType='prepend'>\n                      <InputGroupText className='bg-white border-top-0 border-left-0 border-right-0 rounded-0'>\n                        <img alt='...' src={require('assets/img/svg/mail.svg')} width={20} height={20} />\n                      </InputGroupText>\n                    </InputGroupAddon>\n                    <Input type='email'\n                      placeholder='Enter your email'\n                      className='border-top-0 border-left-0 border-right-0 rounded-0'\n                      value={email}\n                      onChange={event => this.setState({ email: event.target.value, emailErr: '' })}\n                      invalid={emailErr ? true : false} />\n                  </InputGroup>\n                </Form>\n                <FormFeedback>{emailErr}</FormFeedback>\n              </FormGroup>\n              {alert.message && <Alert color={alert.type}>{alert.message}</Alert>}\n              <Button className='bg-blue text-white border-0 w-90 mt-4 py-2'\n                onClick={this.resetPassword}\n                loading={sendingEmail}\n                disabled={sendingEmail}>\n                <strong>RESET PASSWORD</strong>\n              </Button>\n              <div className='d-flex my-4'>\n                <h6 className='text-darkgray'>Remember your password?</h6>\n                <Button className='bg-transparent border-0 shadow-none p-0' tag='a' href='/sign-in'>\n                  <h6 className='mb-0 blue-tint'><strong>&nbsp;Sign In</strong></h6>\n                </Button>\n              </div>\n            </Card>\n          </Col>\n        </Row>\n        <img alt='...' src={require('assets/img/png/login-right.png')} className='login-right-img' />\n      </div>\n    )\n  }\n}\n","import React from 'react';\nimport { Popover } from 'reactstrap';\nimport Button from 'reactstrap-button-loader';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\n\nclass Headerbar extends React.Component {\n  render() {\n    const { isOpenPopover, showPopover, togglePopover, onSignout } = this.props;\n    return (\n      <div className='d-flex justify-content-between bg-white px-3 py-2'>\n        <div className='d-flex flex-column align-items-center'>\n        <img alt='...' src={require('assets/img/png/homepage-logo.png')} width={200} />\n        </div>\n        <div id='userAvatar'\n          className='d-flex align-items-center'\n          style={{ cursor: 'pointer' }}\n          onClick={showPopover}>\n          <img alt='...' src={require('assets/img/svg/avatar.svg')} width={30} height={30} />\n          <div className='d-flex flex-column ml-2'>\n            <small><strong>{this.props.user.name}</strong></small>\n            <small>{_.upperFirst(this.props.user.role)}</small>\n          </div>\n        </div>\n        <Popover\n          placement=\"bottom\" isOpen={isOpenPopover} target='userAvatar' toggle={togglePopover}>\n          <Button className='bg-secondary border-0 blue-tint' onClick={onSignout}><strong>Sign Out</strong></Button>\n        </Popover>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  user: state.user\n});\n\nexport default connect(mapStateToProps)(Headerbar);\n","import React from 'react';\nimport {\n  NavbarToggler,\n  Navbar,\n  NavItem,\n  Nav,\n  Collapse\n} from 'reactstrap'\nimport _ from 'lodash';\n\nexport default class MainMenus extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isOpen: false,\n    }\n  }\n  render() {\n    const { isOpen } = this.state;\n    const { menus, className, activeMenu, onChangeMenu, onClick } = this.props;\n    return (\n      <Navbar\n        onClick={onClick}\n        className={'justify-content-start px-0 ' + className}\n        expand='lg'>\n        <NavbarToggler className='ml-auto mr-0 mr-lg-5' onClick={() => this.setState({ isOpen: !this.state.isOpen })} />\n        <Collapse isOpen={isOpen} navbar>\n          <Nav navbar className='mx-4 mx-sm-0'>\n          {\n            _.map(menus, (menu, index) => (\n              <NavItem\n                key={menu}\n                tag='button'\n                className={'mx-2 mx-lg-4 mt-3 mt-lg-0 border-0 rounded px-3 py-2 ' + (activeMenu === menu ? 'bg-blue text-white' : 'bg-transparent text-darkgray')}\n                onClick={() => {\n                  this.setState({ isOpen: false });\n                  onChangeMenu(menu);\n                }}>\n                <h5 className='mb-0'><strong>{menu}</strong></h5>\n              </NavItem>\n            ))\n          }\n          </Nav>\n        </Collapse>\n      </Navbar>\n    )\n  }\n}\n","import React from 'react';\nimport { Row, Col } from 'reactstrap';\nimport _ from 'lodash';\n\nexport default class FullCalendarItem extends React.Component {\n  render() {\n    const { date, day, className, onClickItem, bookingsInDay } = this.props;\n    return (\n      <Col className={'d-flex flex-column ' + className} xl='2' lg='3' md='4' sm='6' xs='6'>\n        <h6>{date} <small>({day})</small></h6>\n        <Row className='mx-0'>\n          {\n            _.times(24, (id) => (\n              <Col key={`${id}`}\n                xs='auto'\n                className='p-0 cursor-pointer'\n                onClick={() => onClickItem(id)}>\n                <div className='border m-1'\n                  style={{\n                    width: 25,\n                    height: 25,\n                    backgroundColor: bookingsInDay[id] ? bookingsInDay[id].aptColorHex: '#FFFFFF'\n                  }} />\n              </Col>\n            ))\n          }\n        </Row>\n      </Col>\n    )\n  }\n}\n","import React from \"react\";\n// react plugin used to create datetimepicker\nimport ReactDatetime from \"react-datetime\";\nimport moment from 'moment';\n\n// reactstrap components\nimport {\n  FormGroup,\n  InputGroupAddon,\n  InputGroupText,\n  InputGroup\n} from \"reactstrap\";\n\nclass Datepicker extends React.Component {\n\n  // disable past dates\n  disablePastDt = current => {\n    const yesterday = moment().subtract(1, 'day');\n    return current.isAfter(yesterday);\n  };\n\n  render() {\n    const { onDateChanged, value, disabled, className } = this.props;\n    return (\n      <FormGroup className={className}>\n        <InputGroup>\n          <InputGroupAddon addonType=\"prepend\">\n            <InputGroupText className={disabled ? 'bg-disabled' : 'bg-white'}>\n              <img\n                alt='...'\n                src={require('assets/img/svg/calendar-grey.svg')}\n                width={20}\n                height={20}\n                />\n            </InputGroupText>\n          </InputGroupAddon>\n          <ReactDatetime\n            timeFormat={false}\n            dateFormat='YYYY-MM-DD'\n            value={value}\n            className='rdt-date-picker'\n            isValidDate={this.disablePastDt}\n            inputProps={{ disabled, placeholder: 'Select Booking Day' }}\n            invalid\n            onChange={e => {\n              if (onDateChanged) {\n                onDateChanged(e);\n              }\n            }\n            }\n          />\n        </InputGroup>\n      </FormGroup>\n    );\n  }\n}\n\nexport default Datepicker;\n","export const dateDiffInDays = (date1, date2) => {\n\tconst utc1 = Date.UTC(date1.getFullYear(), date1.getMonth(), date1.getDate());\n\tconst utc2 = Date.UTC(date2.getFullYear(), date2.getMonth(), date2.getDate());\n\treturn Math.floor((utc2 - utc1) / (1000 * 60 * 60 * 24)); // milliseconds for one day\n}\n\nexport const getMonthName = (month) => {\n\tswitch (month) {\n\t\tcase 1:\n\t\t\treturn 'January';\n\t\tcase 2:\n\t\t\treturn 'Febrauray';\n\t\tcase 3:\n\t\t\treturn 'March';\n\t\tcase 4:\n\t\t\treturn 'April';\n\t\tcase 5:\n\t\t\treturn 'May';\n\t\tcase 6:\n\t\t\treturn 'June';\n\t\tcase 7:\n\t\t\treturn 'July';\n\t\tcase 8:\n\t\t\treturn 'August';\n\t\tcase 9:\n\t\t\treturn 'September';\n\t\tcase 10:\n\t\t\treturn 'October';\n\t\tcase 11:\n\t\t\treturn 'November';\n\t\tcase 12:\n\t\t\treturn 'December';\n\t\tdefault:\n\t\t\treturn null\n\t}\n}\n\nexport const getDayName = (day) => {\n\tswitch (day) {\n\t\tcase 0:\n\t\t\treturn 'Sun';\n\t\tcase 1:\n\t\t\treturn 'Mon';\n\t\tcase 2:\n\t\t\treturn 'Tue';\n\t\tcase 3:\n\t\t\treturn 'Wed';\n\t\tcase 4:\n\t\t\treturn 'Thu';\n\t\tcase 5:\n\t\t\treturn 'Fri';\n\t\tcase 6:\n\t\t\treturn 'Sat';\n\t\tdefault:\n\t\t\treturn null;\n\t}\n}\n\nexport const dataURLToFile = (dataurl, filename) => {\n  const arr = dataurl.split(',')\n  const mime = arr[0].match(/:(.*?);/)[1]\n  const bstr = atob(arr[1])\n  let n = bstr.length\n  const u8arr = new Uint8Array(n)\n  while (n) {\n    u8arr[n - 1] = bstr.charCodeAt(n - 1)\n    n -= 1 // to make eslint happy\n  }\n  return new File([u8arr], filename, { type: mime })\n}\n","import React from 'react';\nimport {\n  Alert,\n  Modal,\n  ModalBody,\n  ModalFooter,\n  Label,\n  Input,\n  FormGroup,\n  Form,\n  FormFeedback,\n  Row,\n  Col\n} from 'reactstrap';\nimport Button from 'reactstrap-button-loader';\nimport Datepicker from 'components/Datepicker';\nimport html2canvas from 'html2canvas';\nimport { dataURLToFile } from 'utils';\nimport { connect } from 'react-redux';\nimport APIs from 'APIs';\nimport { Helmet } from 'react-helmet';\n\nclass SignCOVIDModal extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      alert: {\n        type: '',\n        message: ''\n      },\n      startedSign: false,\n      name: '',\n      nameErr: '',\n      aptNumber: '',\n      aptNumberErr: '',\n      todayDate: new Date(),\n      saving: false\n    }\n  }\n\n  onOpened = () => {\n    const { activeBooking } = this.props;\n    if (activeBooking) {\n      this.setState({ name: activeBooking.aptName, aptNumber: activeBooking.aptNumber });\n    }\n  }\n\n  onClosed = () => {\n    this.setState({ startedSign: false });\n    if (this.tmr) {\n      clearInterval(this.tmr);\n    }\n    if (this.resetIsSupported) {\n      window.Reset();\n    } else {\n      window.ClearTablet();\n      window.SetTabletState(0, this.tmr);\n    }\n  }\n\n  startSignOrClear = () => {\n    if (!window.IsSigWebInstalled()) {\n      this.setState({ alert: { type: 'danger', message: 'Unable to communicate with SigWeb. Please confirm that SigWeb is installed and running on this PC.' } });\n      return;\n    }\n    this.resetIsSupported = this.getResetSupported();\n    if (!this.resetIsSupported) {\n      this.setState({\n        alert: {\n          type: 'danger',\n          message: (<span>There is a newer version of SigWeb available <a href='https://www.topazsystems.com/software/sigweb.exe'>here</a></span>)\n        }\n      });\n      return;\n    }\n\n    const { startedSign } = this.state;\n    if (startedSign) {\n      window.ClearTablet();\n      return;\n    }\n    this.setState({ startedSign: true });\n    var ctx = document.getElementById('signCnv').getContext('2d');\n    window.SetDisplayXSize( 500 );\n    window.SetDisplayYSize( 100 );\n    window.SetTabletState(0, this.tmr);\n    window.SetJustifyMode(0);\n    window.ClearTablet();\n    if(this.tmr == null)\n    {\n      this.tmr = window.SetTabletState(1, ctx, 50);\n    }\n    else\n    {\n      window.SetTabletState(0, this.tmr);\n      this.tmr = null;\n      this.tmr = window.SetTabletState(1, ctx, 50);\n    }\n  }\n\n  getResetSupported = () => {\n    var minSigWebVersionResetSupport = \"1.6.4.0\";\n\n    if(this.isOlderSigWebVersionInstalled(minSigWebVersionResetSupport)){\n      console.log(\"Old SigWeb version installed.\");\n      return false;\n    }\n    return true;\n  }\n\n  isOlderSigWebVersionInstalled = (cmprVer) => {\n    var sigWebVer = window.GetSigWebVersion();\n    if(sigWebVer !== \"\"){\n      return this.isOlderVersion(cmprVer, sigWebVer);\n    } else{\n      return false;\n    }\n  }\n\n  isOlderVersion = (oldVer, newVer) => {\n    const oldParts = oldVer.split('.')\n    const newParts = newVer.split('.')\n    for (var i = 0; i < newParts.length; i++) {\n      const a = parseInt(newParts[i]) || 0\n      const b = parseInt(oldParts[i]) || 0\n      if (a < b) return true\n      if (a > b) return false\n    }\n    return false;\n  }\n\n  saveCertificate = () => {\n    if (!this.props.activeBooking) return;\n    if (window.NumberOfTabletPoints() === 0) {\n      this.setState({ alert: { type: 'danger', message: 'Please sign before continuing' } });\n      return;\n    }\n    const { name, aptNumber } = this.state;\n    if (!name) {\n      this.setState({ nameErr: 'Invalid name' });\n      return;\n    }\n    if (!aptNumber) {\n      this.setState({ aptNumberErr: 'Invalid apt number' });\n      return;\n    }\n    this.setState({ saving: true });\n    const modalBody = document.getElementById('modalBody');\n    const modalArea = modalBody.getBoundingClientRect()\n    html2canvas(modalBody, {\n      scrollX: 0,\n      scrollY: 0,\n      width: modalArea.width,\n      height: modalArea.height\n    }).then(canvas => {\n      const filename = 'covid_cert_' + Date.now() + '.png';\n      const certFile = dataURLToFile(canvas.toDataURL(), filename);\n      const params = {\n        bookingId: this.props.activeBooking.id,\n        file: certFile,\n        filename\n      }\n      APIs.uploadCertificate(params, this.uploadListener).then(resp => {\n        const { data } = resp.data;\n        this.setState({ saving: false });\n        if (this.props.onSavedCert) {\n          this.props.onSavedCert(data);\n        }\n      }).catch(err => {\n        let message = err.message;\n        if (err.response) {\n          message = err.response.data.message;\n        }\n        this.setState({ saving: false, alert: { type: 'danger', message } });\n      });\n    });\n  }\n\n  uploadListener = (event) => {\n    var percentCompleted = Math.round((event.loaded * 100) / event.total);\n    this.setState({ percentCompleted });\n  }\n\n  onTodayDateChanged = (dateTime) => {\n    this.setState({ todayDate: dateTime.toDate() });\n  }\n\n  render() {\n    const { isOpen, toggle } = this.props;\n    const { alert, name, nameErr, todayDate, aptNumber, aptNumberErr, saving, startedSign } = this.state;\n    return (\n      <Modal id='mainModal' size='lg' onOpened={this.onOpened} onClosed={this.onClosed} isOpen={isOpen} toggle={toggle} centered>\n        <Helmet>\n          <script type=\"text/javascript\" src=\"SigWebTablet.js\" />\n        </Helmet>\n        <ModalBody id='modalBody'>\n          <div className='d-flex flex-column align-items-center'>\n            <h2 className='text-darkgray'><strong>COVID-19 CERTIFICATION-FITNESS CENTER</strong></h2>\n            <h6 className='text-darkgray'>\n              In light of the Coronavirus pandemic, I understand that the NYC\n              Department of Health, the CDC, the NYS Department of Health and\n              other governmental agencies have recommended that certain people\n              remain at home and self-quarantine. I recognize that my ability to enter\n              into the Fitness Center\n              is conditioned upon my making the representations set forth in the\n              Certification below and that I may be denied access if management\n              believes, in its reasonable judgement, that I am exhibiting symptoms\n              of COVID-19.<br /><br />By signing this, I Certify that I have not: <br /><br />a) knowingly\n              been in close contact in the past 14 days with anyone who has tested\n              positive for COVID-19 or who has or had symptoms of COVID-19; <br /><br />\n              b) tested positive for COVID-19 through a diagnostic test\n              in the past 14 days; <br /><br />c) experienced any symptoms of COVID-19 in\n              the past 14 days; and <br /><br />d) traveled within a state with significant\n              community spread of COVID-19 for longer than 24 hours within the past 14 days.</h6>\n          </div>\n          <Row className='mx-0'>\n            <Col className='d-flex align-items-center' xs='auto'>\n              Sign:\n            </Col>\n            <Col className='d-flex justify-content-center'>\n              <canvas id='signCnv' name='signCnv' style={{ height: 100, width: 500 }} />\n            </Col>\n            <Col xs='auto' className='d-flex align-items-center'>\n              <Button className={'p-1 border-0 ' + (startedSign ? 'bg-danger' : 'bg-blue')} onClick={this.startSignOrClear}>\n                <small>{startedSign ? 'Clear' : 'Start Sign'}</small>\n              </Button>\n            </Col>\n          </Row>\n          <Form className='d-flex align-items-end mt-3 mx-3'>\n            <Label className='mb-0'>\n              Name:\n            </Label>\n            <Input type='text'\n              placeholder='Enter your name'\n              className='border-top-0 border-left-0 border-right-0 rounded-0 ml-4'\n              value={name}\n              onChange={event => this.setState({ name: event.target.value, nameErr: '' })}\n              invalid={nameErr ? true : false} />\n          </Form>\n          <FormFeedback>{nameErr}</FormFeedback>\n          <FormGroup row className='mx-3 mt-3'>\n            <Col xs='12' sm='7' className='px-0'>\n              <Form className='d-flex align-items-end'>\n                <Label className='mb-0'>\n                  Today's Date:\n                </Label>\n                <Datepicker\n                  value={todayDate}\n                  onDateChanged={this.onTodayDateChanged}\n                  className='mb-0 ml-2'\n                  />\n              </Form>\n            </Col>\n            <Col xs='12' sm='5' className='px-0'>\n              <Form className='d-flex align-items-end'>\n                <Label className='mb-0'>\n                  Apartment #:\n                </Label>\n                <Col>\n                <Input type='text'\n                  className='border-top-0 border-left-0 border-right-0 rounded-0 ml-2'\n                  value={aptNumber}\n                  onChange={event => this.setState({ aptNumber: event.target.value })}\n                  invalid={aptNumberErr ? true : false} />\n                  </Col>\n              </Form>\n              <FormFeedback>{aptNumberErr}</FormFeedback>\n            </Col>\n          </FormGroup>\n          {alert.message && <Alert className='mt-4' color={alert.type}>{alert.message}</Alert>}\n        </ModalBody>\n        <ModalFooter>\n          <div className='d-flex justify-content-end'>\n            <Button\n              className='bg-white text-darkgray p-2'\n              onClick={toggle}>\n              <small>CANCEL</small>\n            </Button>\n            <Button className='bg-blue text-darkgray border-0 p-2 ml-3'\n              loading={saving}\n              disabled={saving}\n              onClick={this.saveCertificate}>\n              <small>SAVE CERTIFICATE</small>\n            </Button>\n          </div>\n        </ModalFooter>\n      </Modal>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  user: state.user\n})\n\nexport default connect(mapStateToProps)(SignCOVIDModal);\n","import React from 'react';\nimport { Alert, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport Button from 'reactstrap-button-loader';\n\nexport const AlertModal = ({\n  title, body, errorMsg, inProgress, toggle, isOpen, posBtnTitle, negBtnTitle, centered,\n  onClickPositive, onClickNegative}) => (\n  <Modal isOpen={isOpen} centered={centered} toggle={toggle}>\n    <ModalHeader className='f-family-poppins'>{title}</ModalHeader>\n    <ModalBody className='f-family-poppins' style={{ lineHeight: 1.5 }}>\n      {body}\n      {errorMsg && <Alert color='danger' className='mt-4'>{errorMsg}</Alert>}\n    </ModalBody>\n    <ModalFooter>\n      <Button color='danger' onClick={onClickPositive} loading={inProgress} className='f-family-poppins px-3'>{posBtnTitle ? posBtnTitle : 'Yes'}</Button>\n      {onClickNegative && <Button color='secondary' onClick={onClickNegative}  className='f-family-poppins px-3'>{negBtnTitle ? negBtnTitle : 'No'}</Button>}\n    </ModalFooter>\n  </Modal>\n);\n","import React from 'react';\nimport {\n  Alert,\n  Modal,\n  ModalBody,\n  Row,\n  Col,\n  Input,\n  FormGroup,\n  FormFeedback,\n  //FormText\n} from 'reactstrap';\nimport Button from 'reactstrap-button-loader';\nimport _ from 'lodash';\nimport Datepicker from 'components/Datepicker';\nimport SignCOVIDModal from 'modals/SignCOVIDModal';\nimport { connect } from 'react-redux';\nimport APIs from 'APIs';\nimport moment from 'moment';\nimport { AlertModal } from './AlertModal';\nimport { dateDiffInDays } from 'utils';\n\nclass AddBookingModal extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      alert: {\n        type: '',\n        message: ''\n      },\n      fullTimeSlots: [\n        {\n          startTime: 8,\n          startMins: 0,\n          value: '8:00 ~ 9:00'\n        }\n      ],\n      timeSlots: [\n        {\n          startTime: 8,\n          startMins: 0,\n          value: '8:00 ~ 9:00'\n        }\n      ],\n      bookingDate: undefined,\n      bookingTime: '8:00 ~ 9:00',\n      aptNumbers: [],\n      aptNumber: '',\n      aptNumberErr: '',\n      aptName: '',\n      aptNames: [],\n      aptColorHex: '',\n      bookingNote: '',\n      bookingNoteErr: '',\n      showSignCOVIDModal: false,\n      showConfirmResignModal: false,\n      showConfirmDeleteModal: false,\n      savingBook: false,\n      deletingBook: false,\n      fetchingBookedSlots: false,\n      signedCOVID: false\n    }\n  }\n\n  componentDidMount() {    \n    this.getApartments();\n    this.getTimeSlots();\n  }\n\n  initTimeSlots() {\n    const { bookingDateTime, user, activeBooking } = this.props;\n    if (bookingDateTime) {\n      const startTime = bookingDateTime.getHours();\n      const startMins = bookingDateTime.getMinutes();\n      const bookingTime = _.find(this.state.timeSlots, time => time.startTime === startTime && time.startMins === startMins);\n      if (bookingTime) {\n        this.setState({ bookingDate: moment(bookingDateTime), bookingTime: bookingTime.value });\n      }\n    }\n    if (activeBooking) {\n      const bookedDateTime = new Date(activeBooking.bookedDateTime);\n      this.getBookedTimeSlots(bookedDateTime);\n      const startTime = bookedDateTime.getHours();\n      const startMins = bookedDateTime.getMinutes();\n      this.setState({\n        bookingDate: moment(bookedDateTime),\n        aptNumber: activeBooking.aptNumber,\n        aptName: activeBooking.aptName,\n        aptColorHex: activeBooking.aptColorHex,\n        bookingNote: activeBooking.note,\n        signedCOVID: activeBooking.certUrl ? true : false\n      });\n      const bookingTime = _.find(this.state.timeSlots, time => time.startTime === startTime && time.startMins === startMins);\n      if ( bookingTime ) {\n        this.setState({\n          bookingTime: bookingTime.value,\n        });\n      }\n    } else {\n      if (bookingDateTime) {\n        this.getBookedTimeSlots(bookingDateTime);\n      }\n      if (user.role === 'shareholder') {\n        this.setState({\n          aptNumbers: [{ aptNumber: user.aptNumber, aptColorHex: user.aptColorHex }],\n          aptNames: [_.last(_.split(user.name, ' '))],\n          aptName: _.last(_.split(user.name, ' ')),\n          aptNumber: user.aptNumber,\n          aptColorHex: user.aptColorHex\n        });\n        return;\n      }\n    }\n  }\n\n  getTimeSlots = () => {\n    const params = { buildingId: this.props.user.buildingId };\n    APIs.getTimeSlots(params).then(resp => {\n      const {data} = resp.data;\n      if ( data.length !== 0 ) {\n        var times = [];\n        _.forEach(data, slot => {\n            var startTimeArr = slot.start.split(':');\n            var endTimeArr = slot.end.split(':');\n            times.push({ startTime: parseInt(startTimeArr[0], 10), startMins: parseInt(startTimeArr[1], 10), value: startTimeArr[0]+':'+startTimeArr[1]+' ~ '+endTimeArr[0]+':'+endTimeArr[1]});\n        });\n        this.setState({ timeSlots: times, fullTimeSlots: times });\n      }      \n      this.initTimeSlots();\n    }).catch(err => {\n      let message = err.message;\n      if (err.response) {\n        message = err.response.data.message;\n      }\n      this.setState({ alert: { type: 'danger', message } });\n    });\n  }\n\n  onOpened = () => {\n    const { activeBooking } = this.props;\n    if (activeBooking && activeBooking.certUrl) {\n      this.setState({ showConfirmResignModal: true, signedCOVID: true });\n    }\n  }\n\n  openSignCOVIDDialog = () => {\n    if (this.props.user.role !== 'doorman') {\n      return;\n    }\n    const { signedCOVID } = this.state;\n    if (signedCOVID) {\n      this.setState({ showConfirmResignModal: true });\n    } else {\n      this.setState({ showSignCOVIDModal: true });\n    }\n  }\n\n  deleteBooking = () => {\n    const { activeBooking } = this.props;\n    if (activeBooking) {\n      this.setState({ deletingBook: true });\n      const params = {\n        bookingId: activeBooking.id\n      }\n      APIs.cancelBooking(params).then(resp => {\n        const { bookingId } = resp.data.data;\n        this.setState({ showConfirmDeleteModal: false, deletingBook: false });\n        if (this.props.onDeleteBooking) {\n          this.props.onDeleteBooking(bookingId);\n        }\n      }).catch(err => {\n        this.setState({ deletingBook: false });\n      })\n    }\n  }\n\n  saveBooking = () => {\n    if (!this.props.user.id) {\n      return;\n    }\n    const { activeBooking } = this.props;\n    let { bookingDate, bookingTime, aptNumber, aptColorHex, aptName, bookingNote } = this.state;\n    if (!bookingDate) {\n      return;\n    }\n    if (!aptNumber) {\n      this.setState({ aptNumberErr: 'Apartment number cannot be empty' });\n      return;\n    }\n    bookingDate = bookingDate.toDate();\n    const timeObj = _.find(this.state.fullTimeSlots, time => time.value === bookingTime);\n    bookingDate.setHours(timeObj.startTime);\n    bookingDate.setMinutes(timeObj.startMins);\n    const params = {\n      bookingId: activeBooking ? activeBooking.id : null, userId: this.props.user.id, userName: this.props.user.name,\n      userPhoneNumber: this.props.user.phoneNumber, userRole: this.props.user.role, bookedDateTime: bookingDate, aptNumber,\n      aptColorHex, aptName, bookingNote, buildingId: this.props.user.buildingId\n    };\n    this.setState({ savingBook: true, alert: { type: '', message: '' } });\n    APIs.saveBooking(params).then(resp => {\n      this.setState({ savingBook: false });\n      const { data } = resp.data;\n      if (this.props.onBookDone) {\n        this.props.onBookDone(data);\n      }\n    }).catch(err => {\n      let message = err.message;\n      if (err.response) {\n        message = err.response.data.message;\n      }\n      this.setState({ savingBook: false, alert: { type: 'danger', message } });\n    });\n  }\n\n  onDateChanged = (dateTime) => {\n    this.setState({ bookingDate: dateTime });\n    this.getBookedTimeSlots(dateTime.toDate());\n  }\n\n  getBookedTimeSlots = (dateTime) => {\n    const filterDate = dateTime;\n    filterDate.setHours(5);\n    filterDate.setMinutes(0);\n    filterDate.setSeconds(0);\n    const params = {\n      filterDate\n    }\n    this.setState({ fetchingBookedSlots: true });\n    APIs.getBookedTimeSlots(params).then(resp => {\n      const bookedTimeSlots = resp.data.data;\n      const timeSlots = _.filter(this.state.fullTimeSlots, slot => _.findIndex(bookedTimeSlots, bSlot => {\n        const bookedDateTime = new Date(bSlot.bookedDateTime);\n        if (bookedDateTime.getHours() === slot.startTime && bookedDateTime.getMinutes() === slot.startMins) {\n          return true;\n        }\n        return false;\n      }) === -1)\n      const index = _.findIndex(timeSlots, time => time.value === this.state.bookingTime);\n      let bookingTime;\n      if (index !== -1) {\n        bookingTime = timeSlots[index].value;\n      } else {\n        if (!this.props.activeBooking) {\n          bookingTime = timeSlots.length > 0 ? timeSlots[0].value : 'Not available booking time';\n        } else {\n          const { activeBooking } = this.props;\n          const bookedDateTime = new Date(activeBooking.bookedDateTime);\n          const startTime = bookedDateTime.getHours();\n          const startMins = bookedDateTime.getMinutes();\n          bookingTime = _.find(this.state.timeSlots, time => time.startTime === startTime && time.startMins === startMins).value;\n        }\n      }\n      this.setState({\n        timeSlots,\n        bookingTime,\n        fetchingBookedSlots: false\n      });\n    }).catch(err => {\n      this.setState({ fetchingBookedSlots: false });\n    });\n  }\n\n  getApartments = () => {\n    const params = {\n      buildingId: this.props.user.buildingId\n    }\n    APIs.getApartments(params).then(resp => {\n      const { data } = resp.data;\n      if (data && data.length > 0) {\n        const { aptNumber, aptName, aptColorHex } = this.state;\n        let index = 0;\n        if (aptNumber) {\n          index = _.findIndex(data, d=> d.aptNumber === aptNumber);\n        }\n        this.setState({\n          aptNumbers: data,\n          aptNumber: aptNumber ? aptNumber : data[0].aptNumber,\n          aptColorHex: aptColorHex ? aptColorHex : data[0].aptColorHex,\n          aptNames: _.split(data[index].aptNames, ','),\n          aptName: aptName ? aptName : _.split(data[index].aptNames, ',')[0]\n        });\n      }\n    }).catch(err => {\n      console.log('APT numbers err: ', err);\n    });\n  }\n\n  onSavedCert = (booking) => {\n    this.setState({ signedCOVID: true, showSignCOVIDModal: false });\n    if (this.props.onSavedCert) {\n      this.props.onSavedCert(booking);\n    }\n  }\n\n  onChangeAPTNumber = (e) => {\n    const { aptNumbers } = this.state;\n    const index = _.findIndex(aptNumbers, apt => apt.aptNumber === e.target.value)\n    if (index !== -1) {\n      this.setState({\n        aptNumber: e.target.value,\n        aptColorHex: aptNumbers[index].aptColorHex,\n        aptNames: _.split(aptNumbers[index].aptNames, ','),\n        aptName: _.split(aptNumbers[index].aptNames, ',')[0]\n      });\n    }\n  }\n\n  renderTimeSlots = () => {\n    const { timeSlots } = this.state;\n    const { activeBooking } = this.props;\n    if (activeBooking) {\n      var slotOptions = [];\n      const bookedDateTime = new Date(activeBooking.bookedDateTime);\n      const startTime = bookedDateTime.getHours();\n      const startMins = bookedDateTime.getMinutes();\n      const bookingTime = _.find(this.state.fullTimeSlots, time => time.startTime === startTime && time.startMins === startMins);\n      if ( bookingTime ){\n        slotOptions.push(<option key={bookingTime.value} value={bookingTime.value}>{bookingTime.value}</option>)\n      }\n      slotOptions.push(\n        <optgroup key='timeslots' label='Available time slots'>\n        {\n          _.map(timeSlots, slot => (\n            <option key={slot.value} value={slot.value}>{slot.value}</option>\n          ))\n        }\n        </optgroup>\n      )\n      return slotOptions;\n    } else {\n      return _.map(timeSlots, slot => (\n        <option key={slot.value} value={slot.value}>{slot.value}</option>\n      ))\n    }\n  }\n\n  render() {\n    const { isOpen, toggle, user, activeBooking } = this.props;\n    const {\n      alert, bookingDate, bookingTime, aptNumbers, aptNumber, aptNumberErr, aptName, aptNames, bookingNote, showSignCOVIDModal,\n      showConfirmResignModal, showConfirmDeleteModal, savingBook, deletingBook, fetchingBookedSlots, signedCOVID\n    } = this.state;\n    return (\n      <Modal isOpen={isOpen} toggle={toggle} onOpened={this.onOpened} size='lg' centered>\n        <ModalBody>\n          <div className='d-flex  flex-grow-1 justify-content-between'>\n            <h4 className='mb-0 text-darkgray'><strong>Add New Booking</strong></h4>\n            <Button className='border-0 bg-transparent p-0' onClick={toggle}>\n              <img alt='...' src={require('assets/img/svg/cancel.svg')} width={30} height={30} />\n            </Button>\n          </div>\n          <Row className='mt-5'>\n            <Col xs='12' sm='6'>\n              <h6><strong>DATE</strong></h6>\n              <div>\n                <Datepicker\n                  value={bookingDate}\n                  onDateChanged={this.onDateChanged} className='mb-0' />\n                  {/*<p className='mt-1' style={{fontSize: 11}}>Note: Bookings should be done 7days or more before actual date</p>*/}\n              </div>\n            </Col>\n            <Col xs='12' sm='6'>\n              <h6><strong>TIME</strong></h6>\n              <div>\n                <FormGroup>\n                  <Input type='select'\n                    disabled={fetchingBookedSlots}\n                    value={bookingTime}\n                    onChange={e => this.setState({ bookingTime: e.target.value })}>\n                    {this.renderTimeSlots()}\n                  </Input>\n                  {/*<FormText style={{fontSize: 11}}>Note: Only 60 mins allowed</FormText>*/}\n                </FormGroup>\n              </div>\n            </Col>\n          </Row>\n          <Row className='mt-4'>\n            <Col xs='12' sm='6'>\n              <h6><strong>Apartment #</strong></h6>\n              <div>\n                <Input type='select'\n                  value={aptNumber}\n                  disabled={user.role === 'shareholder'}\n                  onChange={this.onChangeAPTNumber}\n                  invalid={aptNumberErr ? true : false}\n                >\n                {_.map(aptNumbers, a => (\n                  <option value={a.aptNumber} key={a.aptNumber}>{a.aptNumber}</option>\n                ))}\n                </Input>\n                <FormFeedback>{aptNumberErr}</FormFeedback>\n              </div>\n            </Col>\n            <Col xs='12' sm='6'>\n              <h6><strong>Apartment Name</strong></h6>\n              <div>\n                <Input type='select'\n                  value={aptName}\n                  disabled={user.role === 'shareholder'}\n                  onChange={e => this.setState({ aptName: e.target.value })}\n                >\n                {_.map(aptNames, a => (\n                  <option value={a} key={a}>{a}</option>\n                ))}\n                </Input>\n                <FormFeedback>{aptNumberErr}</FormFeedback>\n              </div>\n            </Col>\n          </Row>\n          <Row className='mt-4 mt-sm-5'>\n            <Col lg='10'>\n              <h6><strong>BOOKING NOTES</strong></h6>\n              <Input type='textarea'\n                placeholder='Add a Note...'\n                value={bookingNote}\n                onChange={(e) => this.setState({ bookingNote: e.target.value })}/>\n            </Col>\n          </Row>\n          {/*\n            activeBooking && user.role === 'doorman' && dateDiffInDays(new Date(activeBooking.bookedDateTime), new Date()) === 0 && !signedCOVID &&\n            <Button className='bg-blue text-white border-0 mt-2' onClick={this.openSignCOVIDDialog}>\n              Sign Covid-19 Certificate\n            </Button>\n          */}\n          {\n            alert.message &&\n            <Alert color={alert.type} className='mt-4'>{alert.message}</Alert>\n          }\n          <div className='d-flex justify-content-end mt-5'>\n            <Button\n              className='bg-white text-darkgray p-2'\n              onClick={toggle}>\n              <small style={{fontWeight: 'bold'}}>CLOSE</small>\n            </Button>\n            { activeBooking && (user.role === 'doorman' || user.role === 'admin') &&\n              <Button className='bg-reject text-white border-0 p-2 ml-3'\n                loading={deletingBook}\n                disabled={deletingBook}\n                onClick={() => this.setState({ showConfirmDeleteModal: true })}>\n                <small style={{fontWeight: 'bold'}}>DELETE BOOKING</small>\n              </Button>\n            }\n            {\n              (!activeBooking || (user.role === 'shareholder' && activeBooking.aptNumber === user.aptNumber) ||\n                user.role === 'admin' || user.role === 'doorman') &&\n              <Button className='bg-blue text-white border-0 p-2 ml-3' \n                loading={savingBook}\n                disabled={savingBook}\n                onClick={this.saveBooking}>\n                <small style={{fontWeight: 'bold'}}>{activeBooking ? 'EDIT BOOKING' : 'SAVE BOOKING'}</small>\n              </Button>\n            }\n          </div>\n        </ModalBody>\n        {\n          showSignCOVIDModal &&\n          <SignCOVIDModal\n            isOpen={showSignCOVIDModal}\n            toggle={() => this.setState({ showSignCOVIDModal: false })}\n            activeBooking={activeBooking}\n            onSavedCert={this.onSavedCert} />\n        }\n        {\n          showConfirmResignModal &&\n          <AlertModal\n            isOpen={showConfirmResignModal}\n            centered\n            title='Confirm'\n            body='Shareholder already signed, Sign another certificate?'\n            onClickPositive={() => this.setState({ showConfirmResignModal: false, showSignCOVIDModal: true })}\n            onClickNegative={() => this.setState({ showConfirmResignModal: false })}\n            />\n        }\n        {\n          showConfirmDeleteModal &&\n          <AlertModal\n            isOpen={showConfirmDeleteModal}\n            title='Cancel Booking'\n            body='Are you sure to cancel this booking?'\n            centered\n            inProgress={deletingBook}\n            onClickPositive={this.deleteBooking}\n            onClickNegative={() => this.setState({ showConfirmDeleteModal: false })}\n            />\n        }\n      </Modal>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  user: state.user\n});\n\nexport default connect(mapStateToProps)(AddBookingModal);\n","import React from 'react';\nimport _ from 'lodash';\nimport ScrollContainer from 'react-indiana-drag-scroll'\nimport AddBookingModal from 'modals/AddBookingModal';\nimport { getDayName } from 'utils';\nimport moment from 'moment';\nimport { connect } from 'react-redux';\nimport { isMobile, MobileView, BrowserView } from 'react-device-detect';\nimport JSZip from 'jszip';\nimport JSZipUtils from 'jszip-utils';\nimport saveAs from 'save-as';\nimport APIs from 'APIs';\n\nclass DetailedCalendar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.scrollRef = React.createRef();\n    this.slotWidth = isMobile ? 80 : 120;\n    this.slotHeight= isMobile ? 60 : 80;\n    this.state = {\n      bookingDateTime: undefined,\n      showBookingModal: false,\n      showSignCOVIDModal: false,\n      activeBooking: undefined,\n      bookings: [],\n      timeSlots: [\n        {\n          startTime: 0,\n          startMin: 0,\n          startValue: 'CET'\n        }\n      ]\n    }\n  }\n\n  componentDidMount() {\n    if (this.props.bookings) {\n      this.setState({ bookings: this.props.bookings });\n    }\n\n    if (this.scrollRef.current && this.props.date) {\n      if (this.props.date > 4) {\n        this.scrollRef.current.scrollTo((this.props.date - 1) * this.slotWidth, 0);\n      }\n    }\n    this.getTimeSlots();\n  }\n\n  getTimeSlots = () => {\n    const params = { buildingId: this.props.user.buildingId };\n    APIs.getTimeSlots(params).then(resp => {\n      const {data} = resp.data;\n\n      if ( data.length !== 0 ) {\n        var times = [{ startTime: 0, startMin: 0, startValue: 'CET' }];\n        _.forEach(data, slot => {\n            var startTimeArr = slot.start.split(':');\n            var endTimeArr = slot.end.split(':');\n            times.push({ startTime: parseInt(startTimeArr[0], 10), startMin: parseInt(startTimeArr[1], 10), startValue: startTimeArr[0]+':'+startTimeArr[1], endValue: endTimeArr[0]+':'+endTimeArr[1]});\n        });\n        this.setState({ timeSlots: times });\n      }      \n    }).catch(err => {\n      let message = err.message;\n      if (err.response) {\n        message = err.response.data.message;\n      }\n      this.setState({ alert: { type: 'danger', message } });\n    });\n  }\n\n  onBookDone = (booking) => {\n    let { bookings } = this.state;\n    const index = _.findIndex(bookings, b => b.id === booking.id);\n    if (index !== -1) {\n      bookings[index] = booking;\n    } else {\n      bookings = [booking, ...bookings];\n    }\n    this.setState({ showBookingModal: false, bookings });\n    if (this.props.onAddedBooking) {\n      this.props.onAddedBooking(booking);\n    }\n  }\n\n  onSavedCert = (booking) => {\n    const { bookingId, certUrl } = booking;\n    let { bookings } = this.state;\n    const index = _.findIndex(bookings, booking => booking.id === bookingId);\n    if (index !== -1) {\n      bookings[index].certUrl = certUrl;\n      this.setState({ bookings });\n      if (this.props.onSavedCert) {\n        this.props.onSavedCert(booking);\n      }\n    }\n  }\n\n  downloadAllCerts = () => {\n    const { selectedMonth } = this.props;\n    const { bookings } = this.state;\n    const certUrls = _.without(_.map(bookings, booking => {\n      if (booking.certUrl) {\n        return ({ url: booking.certUrl, name: booking.name, bookedDateTime: booking.bookedDateTime });\n      } else {\n        return null;\n      }\n    }), null);\n    let zip = new JSZip();\n    let zipFilename = 'covid_certs_' + selectedMonth.getFullYear() + '_' + (selectedMonth.getMonth() + 1) + '_' + selectedMonth.getDate() + '.zip';\n    let count = 0;\n    certUrls.forEach((cert) => {\n      var filename = cert.name + '_covid_cert_' + moment(cert.bookedDateTime).format('YYYY-MM-DD-hh-mm') + '.png';\n      // loading a file and add it in a zip file\n      JSZipUtils.getBinaryContent(cert.url, (err, data) => {\n         if (err) {\n            throw err; // or handle the error\n         }\n         zip.file(filename, data, { binary:true });\n         count++;\n         if (count === certUrls.length) {\n           zip.generateAsync({ type:'blob' }).then((content) => {\n              saveAs(content, zipFilename);\n           });\n        }\n      });\n    });\n  }\n\n  onDeleteBooking = (bookingId) => {\n    let { bookings } = this.state;\n    _.remove(bookings, booking => booking.id == bookingId);\n    this.setState({ bookings, showBookingModal: false, activeBooking: undefined });\n    if (this.props.onDeleteBooking) {\n      this.props.onDeleteBooking(bookingId);\n    }\n  }\n\n  render() {\n    const { showBookingModal, bookingDateTime, bookings, activeBooking, timeSlots } = this.state;\n    const { numDays, firstDay, selectedMonth } = this.props;\n    return(\n      <>\n        <div className='bg-white border border-0 rounded shadow-sm py-4 px-3 mt-3'>\n            {/*<div className='d-flex justify-content-end'>\n              <Button className='bg-blue border-0 shadow-sm mt-2'\n                onClick={() => this.setState({ showBookingModal: true, activeBooking: undefined })}>\n                BOOK NOW\n              </Button>\n            </div>*/}\n            {\n              /*user.role === 'admin' &&\n              <div className='d-flex justify-content-end'>\n                <Button size='sm'\n                  className='bg-accept border-0 shadow-sm mt-2'\n                  onClick={this.downloadAllCerts}>\n                  <small>Download Available COVID-19 Certificates</small>\n                </Button>\n              </div>*/\n            }\n            {/*<Card className='d-flex flex-column align-items-center shadow-sm py-4 px-3 mt-3'>*/}\n              <div className='d-flex justify-content-center'>\n                <h4 className='blue-tint text-center'><strong>{moment(selectedMonth).format('MMMM YYYY')}</strong></h4>\n              </div>\n              <div className='d-flex w-100 mt-4'>\n                <div>\n                {\n                  _.map(timeSlots, (time, timeId) => (\n                    <div key={time.startValue} className='d-flex flex-column align-items-center justify-content-center border bg-white p-1'\n                      style={{ width: this.slotWidth, height: this.slotHeight }}>\n                      {\n                        timeId === 0 &&\n                        <h6 className='mb-0 text-darkgray-50 text-center'>Time Slot</h6>\n                      }\n                      {\n                        timeId > 0 &&\n                        <div className='align-items-center'>\n                          <small className='mb-0 text-darkgray'>{time.startValue}</small>\n                          <h6 className='mb-0 text-darkgray-50 text-center'>~</h6>\n                          <small className='mb-0 text-darkgray'>{time.endValue}</small>\n                        </div>\n                      }\n                    </div>\n                  ))\n                }\n                </div>\n                <ScrollContainer innerRef={this.scrollRef} vertical={true} className='d-flex w-100'>\n                {\n                  _.times(numDays, (dayId) => (\n                    <div key={`${dayId}`}>\n                    {\n                      _.map(timeSlots, (time, timeId) => {\n                        const bookingInSlot =  _.find(bookings, booking => {\n                          const bookedDateTime = new Date(booking.bookedDateTime);\n                          const bookedDate = bookedDateTime.getDate();\n                          const bookedHour = bookedDateTime.getHours();\n                          const bookedMin = bookedDateTime.getMinutes();\n                          if (bookedDate === dayId + 1 && time.startTime === bookedHour && time.startMin === bookedMin) {\n                            return true;\n                          }\n                          return false\n                        })\n                        return (\n                          <div key={time.startValue}\n                            className='d-flex flex-column align-items-center justify-content-center border bg-white p-0 p-sm-1'\n                            style={{ width: this.slotWidth, height: this.slotHeight, cursor: 'pointer' }}\n                            onClick={() => {\n                              if (!bookingInSlot) {\n                                let bookingDateTime = selectedMonth;\n                                bookingDateTime.setDate(dayId + 1);\n                                bookingDateTime.setHours(time.startTime);\n                                bookingDateTime.setMinutes(time.startMin);\n                                this.setState({\n                                  bookingDateTime,\n                                  showBookingModal: true,\n                                  activeBooking: undefined\n                                });\n                              } else {\n                                this.setState({ showBookingModal: true, activeBooking: bookingInSlot });\n                              }\n                            }}>\n                            {\n                              dayId >= 0 && timeId === 0 &&\n                              <div className='d-flex flex-column align-items-center'>\n                                <h6 className={'text-darkgray-50 ' + (isMobile ? 'mb-0' : 'mb-2')}>{getDayName((firstDay + dayId) % 7)}</h6>\n                                <BrowserView>\n                                  <strong className='text-darkgray'>{dayId + 1}</strong>\n                                </BrowserView>\n                                <MobileView>\n                                  <small><strong className='text-darkgray'>{dayId + 1}</strong></small>\n                                </MobileView>\n                              </div>\n                            }\n                            {\n                              dayId >= 0 && timeId > 0 && bookingInSlot &&\n                              <div className='d-flex flex-column justify-content-center align-items-center w-100 h-100 p-1'\n                                style={{ backgroundColor: bookingInSlot.aptColorHex, cursor: 'pointer' }}>\n                                <small className='text-darkgray'><strong>{bookingInSlot.aptNumber}</strong></small>\n                                <small className='text-darkgray text-center'>{_.truncate(bookingInSlot.aptName, { length: 16 })}</small>\n                                <small className='text-lightblue'>{moment(bookingInSlot.bookedDateTime).format('hh:mm a')}</small>\n                              </div>\n                            }\n                          </div>\n                        )\n                      })\n                    }\n                    </div>\n                  ))\n                }\n                </ScrollContainer>\n              </div>\n            {/*</Card>*/}\n        </div>\n        {\n          showBookingModal &&\n          <AddBookingModal\n            bookingDateTime={bookingDateTime}\n            isOpen={showBookingModal}\n            toggle={() => this.setState({ showBookingModal: false })}\n            activeBooking={activeBooking}\n            onDeleteBooking={this.onDeleteBooking}\n            onSavedCert={this.onSavedCert}\n            onBookDone={this.onBookDone} />\n        }\n      </>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  user: state.user\n});\n\nexport default connect(mapStateToProps)(DetailedCalendar);\n","import React from 'react';\nimport { Pagination, PaginationItem, PaginationLink } from 'reactstrap';\nimport _ from 'lodash';\n\nexport default class CalendarPagination extends React.Component {\n  render() {\n    const { activeIndex, className, onPaginate } = this.props;\n    return (\n      <Pagination size='sm' className={className}>\n        {\n          _.times(12, (id) => (\n            <PaginationItem key={`${id}`} active={activeIndex === id + 1} onClick={() => onPaginate(id + 1)}>\n              <PaginationLink className='text-gray'>\n                {id + 1}\n              </PaginationLink>\n            </PaginationItem>\n          ))\n        }\n      </Pagination>\n    )\n  }\n}\n","import React from 'react';\nimport { Row, Col, Card, ButtonGroup } from 'reactstrap';\nimport Button from 'reactstrap-button-loader';\nimport _ from 'lodash';\nimport FullCalendarItem from 'components/FullCalendarItem';\nimport DetailedCalendar from './DetailedCalendar';\nimport CalendarPagination from 'components/CalendarPagination'\nimport moment from 'moment';\nimport { connect } from 'react-redux';\nimport APIs from 'APIs';\nimport { getDayName } from 'utils';\nimport AddBookingModal from 'modals/AddBookingModal';\nimport JSZip from 'jszip';\nimport JSZipUtils from 'jszip-utils';\nimport saveAs from 'save-as';\n\nclass FullCalendar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedMonth: new Date(),\n      numDays: 0,\n      screenWidth: 0,\n      showBookingModal: false,\n      showDetailedCalendar: false,\n      detailedCalendarDate: 1,\n      selectedPagination: 0,\n      rowCount: 1,\n      bookings: [],\n      showSignCOVIDModal: false,\n      activeBooking: undefined,\n      apartments: []\n    };\n    this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\n  }\n\n  componentDidMount() {\n    this.getApartments();\n    this.onPaginate(new Date().getMonth() + 1);\n    this.updateWindowDimensions();\n    window.addEventListener('resize', this.updateWindowDimensions);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.updateWindowDimensions);\n  }\n\n  updateWindowDimensions() {\n    this.setState({ screenWidth: window.innerWidth });\n  }\n\n  getApartments = () => {\n    const params = {\n      buildingId: this.props.user.buildingId\n    }\n    APIs.getApartments(params).then(resp => {\n      const { data } = resp.data;\n      this.setState({ apartments: data });\n    });\n  }\n\n  onClickItem = (date) => {\n    this.setState({ showDetailedCalendar: true, detailedCalendarDate: date });\n\n  }\n\n  onPaginate = (id) => {\n    //console.log('onPaginate id: ', id);\n    const curDate = new Date();\n    curDate.setMonth(id - 1);\n    this.setState({\n      selectedPagination: id,\n      selectedMonth: curDate,\n      numDays: this.getDaysInMonth(curDate.getFullYear(), curDate.getMonth() + 1)\n    }, () => {\n      this.getBookingsAtMonth();\n    });\n  }\n\n  getDaysInMonth = (year, month) => {\n    return new Date(year, month, 0).getDate();\n  }\n\n  getBookingsAtMonth = () => {\n    if (!this.props.user.id) {\n      return;\n    }\n    const { selectedMonth } = this.state;\n    const params = {\n      filterMonth: selectedMonth,\n      buildingId: this.props.user.buildingId\n    }\n    APIs.getBookingsAtMonth(params).then(resp => {\n      const { data } = resp.data;\n      this.setState({ bookings: data ? data : [] });\n    });\n  }\n\n  getBookingsInDay = (day) => {\n    const { bookings, selectedMonth } = this.state;\n    if (!bookings || bookings.length === 0) {\n      return [];\n    }\n    return _.filter(bookings, booking => {\n      const bookedDateTime = new Date(booking.bookedDateTime);\n      if (bookedDateTime.getFullYear() === selectedMonth.getFullYear() &&\n          bookedDateTime.getMonth() === selectedMonth.getMonth() &&\n          bookedDateTime.getDate() === day) {\n        return true;\n      } else {\n        return false;\n      }\n    })\n  }\n\n  getFirstDayOfMonth = () => {\n    const { selectedMonth } = this.state;\n    selectedMonth.setDate(1);\n    return selectedMonth.getDay();\n  }\n\n  onAddedBooking = (booking) => {\n    let { bookings } = this.state;\n    const index = _.findIndex(bookings, b => b.id === booking.id);\n    if (index !== -1) {\n      bookings[index] = booking;\n    } else {\n      bookings = [...bookings, booking];\n    }\n\n    this.setState({ bookings, showBookingModal: false });\n  }\n\n  getDayOfDate = (date) => {\n    let { selectedMonth } = this.state;\n    selectedMonth.setDate(date);\n    return getDayName(selectedMonth.getDay());\n  }\n\n  onSavedCert = (booking) => {\n    const { bookingId, certUrl } = booking;\n    let { bookings } = this.state;\n    const index = _.findIndex(bookings, booking => booking.id === bookingId);\n    if (index !== -1) {\n      bookings[index].certUrl = certUrl;\n      this.setState({ bookings });\n    }\n  }\n\n  onDeleteBooking = (bookingId) => {\n    let { bookings } = this.state;\n    _.remove(bookings, booking => booking.id == bookingId);\n    this.setState({ bookings });\n    if (this.props.onDeleteBooking) {\n      this.props.onDeleteBooking(bookingId);\n    }\n  }\n\n  renderApts = () => {\n    const { apartments } = this.state;\n    return (\n      <Row>\n      {\n        _.map(apartments, apt => (\n          <Col key={apt.aptNumber} xs='3' lg='2' className='d-flex align-items-center justify-content-center border-right mt-2 py-2'>\n            <h6 className='mb-0'>{apt.aptNumber}</h6>\n            <div className='ml-2' style={{ width: 40, height: 25, backgroundColor: apt.aptColorHex }} />\n          </Col>\n        ))\n      }\n      </Row>\n    )\n  }\n\n  downloadAllCerts = () => {\n    //const { selectedMonth } = this.props;\n    const { bookings, selectedMonth } = this.state;\n    const certUrls = _.without(_.map(bookings, booking => {\n      if (booking.certUrl) {\n        return ({ url: booking.certUrl, name: booking.name, bookedDateTime: booking.bookedDateTime });\n      } else {\n        return null;\n      }\n    }), null);\n    let zip = new JSZip();\n    let zipFilename = 'covid_certs_' + selectedMonth.getFullYear() + '_' + (selectedMonth.getMonth() + 1) + '_' + selectedMonth.getDate() + '.zip';\n    let count = 0;\n    certUrls.forEach((cert) => {\n      var filename = cert.name + '_covid_cert_' + moment(cert.bookedDateTime).format('YYYY-MM-DD-hh-mm') + '.png';\n      // loading a file and add it in a zip file\n      JSZipUtils.getBinaryContent(cert.url, (err, data) => {\n        if (err) {\n          throw err; // or handle the error\n        }\n        zip.file(filename, data, { binary:true });\n        count++;\n        if (count === certUrls.length) {\n          zip.generateAsync({ type:'blob' }).then((content) => {\n            saveAs(content, zipFilename);\n          });\n        }\n      });\n    });\n  }\n\n  render() {\n    const {\n      screenWidth,\n      showBookingModal,\n      showDetailedCalendar,\n      selectedPagination,\n      selectedMonth,\n      numDays,\n      bookings,\n      detailedCalendarDate\n    } = this.state;\n    const { user } = this.props;\n\n    return (\n      <div className='d-flex flex-column my-4 mx-2 mx-lg-5'>\n        <div>\n          <div className='d-flex justify-content-end'>\n            <Button className='bg-blue border-0 shadow-sm'\n              onClick={() => this.setState({ showBookingModal: true })}>\n              BOOK NOW\n            </Button>            \n          </div>\n          {/*\n              user.role === 'admin' &&\n              <div className='d-flex justify-content-end'>\n                <Button size='sm'\n                  className='bg-accept border-0 shadow-sm mt-2'\n                  onClick={this.downloadAllCerts}>\n                  <small>Download Available COVID-19 Certificates</small>\n                </Button>\n              </div>\n          */}\n          <ButtonGroup className='mt-3' style={{ float: 'right' }}>\n              <Button \n                className={\"bg-white border-grey w-50\"}\n                onClick={()=> { this.setState({showDetailedCalendar: false}); }}>\n                {\n                  showDetailedCalendar ? <img alt='...' src={require('assets/img/svg/calendar-grey.svg')} width={20} height={20} />\n                    : <img alt='...' src={require('assets/img/svg/calendar-blue.svg')} width={20} height={20} />\n                }\n              </Button>\n              <Button \n                className={\"bg-white border-grey w-50\"}\n                onClick={()=> { this.setState({showDetailedCalendar: true}); }}>\n                  {\n                  showDetailedCalendar ? <img alt='...' src={require('assets/img/svg/menu-blue.svg')} width={20} height={20} />\n                    : <img alt='...' src={require('assets/img/svg/menu.svg')} width={20} height={20} />\n                  }\n                </Button>\n            </ButtonGroup>\n        </div>\n        {\n          !showDetailedCalendar &&\n          <>\n            <div className='bg-white border border-0 rounded shadow-sm py-4 px-3 mt-3'>\n              <div className='d-flex justify-content-center'>\n                <h4 className='blue-tint text-center'><strong>{moment(selectedMonth).format('MMMM YYYY')}</strong></h4>\n              </div>\n              <Row className='mx-2 mx-sm-4'>\n                {\n                  _.times(numDays, (id) => (\n                    <FullCalendarItem\n                      key={`${id + 1}`}\n                      date={id + 1}\n                      day={this.getDayOfDate(id + 1)}\n                      bookingsInDay={this.getBookingsInDay(id + 1)}\n                      onClickItem={() => this.onClickItem(id + 1)}\n                      className={'py-2 px-2 border-right border-bottom ' +\n                        (((screenWidth >= 1200 && (id + 1) % 6 === 0) ||\n                          (screenWidth >= 992 && screenWidth < 1200 && (id + 1) % 4 === 0) ||\n                          (screenWidth >= 768 && screenWidth < 992 && (id + 1) % 3 === 0) ||\n                          (screenWidth < 768 && (id + 1) % 2 === 0)\n                        )  ? 'border-right-0' : 'border-right-1')} />\n                  ))\n                }\n              </Row>\n            </div>\n            <CalendarPagination\n              activeIndex={selectedPagination}\n              onPaginate={this.onPaginate}\n              className='d-flex justify-content-end mt-1' />\n          </>\n        }\n        {\n          showDetailedCalendar &&\n          <DetailedCalendar\n            numDays={numDays}\n            selectedMonth={selectedMonth}\n            firstDay={this.getFirstDayOfMonth()}\n            date={detailedCalendarDate}\n            bookings={bookings}\n            onAddedBooking={this.onAddedBooking}\n            onDeleteBooking={this.onDeleteBooking}\n            onSavedCert={this.onSavedCert} />\n        }\n        <Card className='shadow-sm px-4 py-4 mt-5'>\n          <h6 className='text-darkgray'><strong>Apartment Colors</strong></h6>\n          <hr className='bg-gray'/>\n          {this.renderApts()}\n        </Card>\n        {\n          showBookingModal &&\n          <AddBookingModal\n            isOpen={showBookingModal}\n            activeBooking={undefined}\n            toggle={() => this.setState({ showBookingModal: false })}\n            onBookDone={this.onAddedBooking} />\n        }\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  user: state.user\n});\n\nexport default connect(mapStateToProps)(FullCalendar);\n","import React from 'react';\nimport { Alert, Row, Col, ListGroup, ListGroupItem } from 'reactstrap';\nimport Button from 'reactstrap-button-loader';\nimport _ from 'lodash';\nimport LoadingOverlay from 'react-loading-overlay';\nimport { connect } from 'react-redux';\nimport APIs from 'APIs';\nimport { AlertModal } from 'modals/AlertModal';\n\nclass Registrations extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      alert: {\n        type: '',\n        message: ''\n      },\n      isLoading: false,\n      showRejectConfirmModal: false,\n      activeRegistration: undefined,\n      registrations: []\n    }\n  }\n\n  componentDidMount() {\n    this.getPendingRegistrations();\n  }\n\n  getPendingRegistrations = () => {\n    this.setState({ isLoading: true });\n    const params = {\n      buildingId: this.props.user.buildingId\n    }\n    APIs.getPendingRegistrations(params).then(resp => {\n      const { data } = resp.data;\n      this.setState({ registrations: data, isLoading: false });\n    }).catch(err => {\n      let message = err.message;\n      if (err.response) {\n        message = err.response.data.message;\n      }\n      this.setState({ isLoading: false, alert: { type: 'danger', message } });\n    });\n  }\n\n  accept = (reg) => {\n    const params = {\n      regId: reg.id\n    };\n    APIs.acceptRegistration(params).then(resp => {\n      const { regId } = resp.data.data;\n      let { registrations } = this.state;\n      _.remove(registrations, reg => reg.id == regId);\n      this.setState({ registrations });\n    }).catch(err => {\n      let message = err.message;\n      if (err.response) {\n        message = err.response.data.message;\n      }\n      this.setState({ alert: { type: 'danger', message } });\n    });\n  }\n\n  reject = () => {\n    const { activeRegistration } = this.state;\n    const params = {\n      regId: activeRegistration.id\n    };\n    APIs.rejectRegistration(params).then(resp => {\n      const { regId } = resp.data.data;\n      let { registrations } = this.state;\n      _.remove(registrations, reg => reg.id == regId);\n      this.setState({ registrations, showRejectConfirmModal: false });\n    }).catch(err => {\n      let message = err.message;\n      if (err.response) {\n        message = err.response.data.message;\n      }\n      this.setState({ alert: { type: 'danger', message } });\n    });\n  }\n\n  renderRegistrations = () => {\n    const { registrations, isLoading } = this.state;\n    return (\n      <LoadingOverlay active={isLoading} spinner>\n        <ListGroup>\n          {\n            _.map(registrations, reg => (\n              <ListGroupItem key={reg.email} className='shadow-sm py-3 mt-3'>\n                <Row className='mx-0 bg-white'>\n                  <Col xs='6' sm='auto' lg='2' className='px-1'>\n                    <h6><strong>NAME</strong></h6>\n                    <h6 className='mb-0'>{reg.name}</h6>\n                  </Col>\n                  <Col xs='6' sm='auto' lg='3' className='px-1'>\n                    <h6><strong>EMAIL</strong></h6>\n                    <h6 className='mb-0'>{reg.email}</h6>\n                  </Col>\n                  <Col xs='6' sm='auto' lg='3' className='mt-3 mt-sm-0 px-1'>\n                    <h6><strong>PHONE NUMBER</strong></h6>\n                    <h6 className='mb-0'>{reg.phoneNumber}</h6>\n                  </Col>\n                  <Col xs='6' sm='auto' lg='auto' className='mt-3 mt-sm-0 px-1'>\n                    <h6><strong>APT NUMBER</strong></h6>\n                    <h6 className='mb-0'>{reg.aptNumber}</h6>\n                  </Col>\n                  <Col className='d-flex justify-content-end align-items-center mt-3 mt-lg-0 px-1'>\n                    <Button className='bg-accept border-0 text-white'\n                      onClick={() => this.accept(reg)}>Accept</Button>\n                    <Button className='bg-reject border-0 text-white ml-2'\n                      onClick={() => this.setState({ showRejectConfirmModal: true, activeRegistration: reg })}>Reject</Button>\n                  </Col>\n                </Row>\n              </ListGroupItem>\n            ))\n          }\n        </ListGroup>\n      </LoadingOverlay>\n    )\n  }\n\n  render() {\n    const { alert, showRejectConfirmModal } = this.state;\n    return (\n      <div className='my-4 mx-2 mx-lg-5'>\n        {alert.message && <Alert color={alert.type}>{alert.message}</Alert>}\n        {this.renderRegistrations()}\n        {\n          showRejectConfirmModal &&\n          <AlertModal\n            isOpen={showRejectConfirmModal}\n            title='Reject'\n            body='Are you sure to reject this registration?'\n            onClickPositive={this.reject}\n            onClickNegative={() => this.setState({ showRejectConfirmModal: false, activeRegistration: false })} />\n        }\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  user: state.user\n});\n\nexport default connect(mapStateToProps)(Registrations);\n","import React from 'react';\nimport { Row, Col, ListGroup, ListGroupItem, Input } from 'reactstrap';\nimport Button from 'reactstrap-button-loader';\nimport _ from 'lodash';\nimport moment from 'moment';\nimport AddBookingModal from 'modals/AddBookingModal';\nimport LoadingOverlay from 'react-loading-overlay';\nimport { connect } from 'react-redux';\nimport APIs from 'APIs';\nimport { AlertModal } from 'modals/AlertModal';\nimport { isMobile } from 'react-device-detect';\nimport LoadingIndicator from 'react-loading-indicator';\n\nclass Bookings extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      alert: {\n        type: '',\n        message: ''\n      },\n      showBookingModal: false,\n      isLoading: false,\n      bookings: [],\n      showConfirmDeleteModal: false,\n      activeBooking: undefined,\n      cancelBook: false,\n      showOldBooking: 0,\n      offset: 0,\n      limit: 10,\n      totalCount: 0,\n      loadingMore: false\n    }\n  }\n\n  componentDidMount() {\n    this.getBookings();\n    document.addEventListener('scroll', this.trackScrolling);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('scroll', this.trackScrolling);\n  }\n\n  trackScrolling = async () => {\n    const wrappedElement = document.getElementById('container');\n    if (this.isBottom(wrappedElement)) {\n      if (this.state.loadingMore) return;\n      if (this.state.offset < this.state.totalCount) {\n        try {\n          this.setState({ loadingMore: true });\n          this.getBookings();\n        } catch (e) {\n          this.setState({ loadingMore: false });\n        }\n      }\n    }\n  }\n\n  isBottom(el) {\n    return el.getBoundingClientRect().bottom <= window.innerHeight + 10;\n  }\n\n  getBookings = () => {\n    if (!this.props.user.id) {\n      return;\n    }\n    const params = {\n      userId: this.props.user.id,\n      role: this.props.user.role,\n      offset: this.state.offset,\n      limit: this.state.limit,\n      showOldBooking: this.state.showOldBooking,\n      buildingId: this.props.user.buildingId\n    }\n    this.setState({ isLoading: true });\n    APIs.getBookings(params).then(resp => {\n      let { data, limit, totalCount } = resp.data.data;\n      if (data.length > 0) {\n        this.setState({\n          isLoading: false,\n          loadingMore: false,\n          bookings: [...this.state.bookings, ...data],\n          offset: this.state.offset + limit,\n          limit,\n          totalCount: totalCount ? totalCount : 0\n        });\n      }\n    }).catch(err => {\n      let message = err.message;\n      if (err.response) {\n        message = err.response.data.message;\n      }\n      this.setState({\n        isLoading: false,\n        loadingMore: false,\n        alert: { type: 'danger', message }\n      });\n    });\n  }\n\n  onBookDone = (newBooking) => {\n    let { bookings } = this.state;\n    const index = _.findIndex(bookings, b => b.id === newBooking.id);\n    if (index !== -1) {\n      bookings[index] = newBooking;\n    } else {\n      bookings = [newBooking, ...bookings];\n    }\n    this.setState({ bookings, showBookingModal: false, isLoading: false });\n  }\n\n  showConfirmDeleteModal = (booking) => {\n    this.setState({ showConfirmDeleteModal: true, activeBooking: booking });\n  }\n\n  cancelBooking = () => {\n    const { activeBooking } = this.state;\n    this.setState({ cancelBook: true });\n    const params = { bookingId: activeBooking.id }\n    APIs.cancelBooking(params).then(resp => {\n      const { bookingId } = resp.data.data;\n      let { bookings } = this.state;\n      _.remove(bookings, booking => booking.id == bookingId);\n      this.setState({ bookings, cancelBook: false, showConfirmDeleteModal: false });\n    }).catch(err => {\n      this.setState({ cancelBook: false });\n    });\n  }\n\n  downloadCovidCert = (booking) => {\n    fetch(booking.certUrl)\n\t\t\t.then(response => {\n        response.blob().then(blob => {\n\t\t\t\t\tlet url = window.URL.createObjectURL(blob);\n\t\t\t\t\tlet a = document.createElement('a');\n\t\t\t\t\ta.href = url;\n\t\t\t\t\ta.download = booking.name + '_covid_cert_' + moment(booking.bookedDateTime).format('YYYY-MM-DD') + '.png';\n\t\t\t\t\ta.click();\n\t\t\t\t});\n      })\n  }\n\n  editBooking = (booking) => {\n    this.setState({ activeBooking: booking, showBookingModal: true });\n  }\n\n  renderBookings = () => {\n    const { bookings, isLoading } = this.state;\n    const { user } = this.props;\n    return (\n      <LoadingOverlay active={isLoading} spinner>\n        <ListGroup>\n        {\n          _.map(bookings, booking => (\n            <ListGroupItem key={booking.id} className='shadow-sm py-3 mt-3'>\n              <Row>\n                <Col xs={isMobile ? '12' : '10'}>\n                  <Row className='mx-0 bg-white'>\n                    <Col xs='4' lg='2' className='px-1'>\n                      <h6><strong>NAME</strong></h6>\n                      <h6 className='mb-0'>{booking.aptName}</h6>\n                    </Col>\n                    <Col xs='4' lg='2' className='px-1'>\n                      <h6><strong>ROLE</strong></h6>\n                      <h6 className='mb-0'>{booking.role}</h6>\n                    </Col>\n                    <Col xs='4' lg='3' className='px-1'>\n                      <h6><strong>APT NUMBER</strong></h6>\n                      <h6 className='mb-0'>{booking.aptNumber}</h6>\n                    </Col>\n                    <Col xs='6' lg='2' className='mt-3 mt-lg-0 px-1'>\n                      <h6><strong>DATE</strong></h6>\n                      <h6 className='mb-0'>{moment(booking.bookedDateTime).format('DD/MM/YYYY')}</h6>\n                    </Col>\n                    <Col xs='6' lg='3' className='mt-3 mt-lg-0 px-1'>\n                      <h6><strong>TIME</strong></h6>\n                      <h6 className='mb-0'>{moment(booking.bookedDateTime).format('hh:mm a')}</h6>\n                    </Col>\n                  </Row>\n                  {\n                    booking.note &&\n                    <Row className='mx-0 mt-3'>\n                      <Col className='px-1'>\n                        <h6><strong>BOOKING NOTE</strong></h6>\n                        <h6 className='mb-0'>{booking.note}</h6>\n                      </Col>\n                    </Row>\n                  }\n                </Col>\n                <Col className='d-flex flex-column justify-content-center align-items-end'>\n                  <div className='d-flex'>\n                    <Button className='bg-blue border-0 text-white ml-2' onClick={() => this.editBooking(booking)}>Edit</Button>\n                    <Button className='bg-reject border-0 text-white ml-2' onClick={() => this.showConfirmDeleteModal(booking)}>Cancel</Button>\n                  </div>\n                  {\n                    user.role === 'admin' && booking.certUrl &&\n                    <Button size='sm'\n                      className='bg-accept border-0 text-white ml-2 mt-3 p-1'\n                      onClick={() => this.downloadCovidCert(booking)}>\n                      <small>Download COVID-19 Cert</small>\n                    </Button>\n                  }\n                </Col>\n              </Row>\n            </ListGroupItem>\n          ))\n        }\n        </ListGroup>\n      </LoadingOverlay>\n    )\n  }\n\n  onDeleteBooking = (bookingId) => {\n    let { bookings } = this.state;\n    _.remove(bookings, booking => booking.id == bookingId);\n    this.setState({ bookings, showBookingModal: false, activeBooking: undefined });\n    if (this.props.onDeleteBooking) {\n      this.props.onDeleteBooking(bookingId);\n    }\n  }\n\n  render() {\n    const { showBookingModal, showConfirmDeleteModal, cancelBook, activeBooking, showOldBooking, loadingMore } = this.state;\n    return (\n      <div id='container' className='my-4 mx-2 mx-lg-5'>\n        <div className='d-flex flex-column align-items-end'>\n          <Button className='bg-blue border-0 shadow-sm mb-4'\n            onClick={() => this.setState({ showBookingModal: true, activeBooking: undefined })}>\n            BOOK NOW\n          </Button>\n          <div className='d-inline-block mt-2'>\n            <Input type='select'\n              value={showOldBooking}\n              onChange={e => {\n                this.setState({ showOldBooking: parseInt(e.target.value), offset: 0, limit: 10, totalCount: 0, bookings: [] }, () => {\n                  this.getBookings();\n                });\n              }}>\n              <option value={0}>Show available bookings</option>\n              <option value={1}>Show all bookings</option>\n            </Input>\n          </div>\n        </div>\n        {\n          this.renderBookings()\n        }\n        {loadingMore && <LoadingIndicator className='d-flex mx-auto mt-4' />}\n        {\n          showBookingModal &&\n          <AddBookingModal\n            isOpen={showBookingModal}\n            activeBooking={activeBooking}\n            toggle={() => this.setState({ showBookingModal: false, activeBooking: undefined })}\n            onBookDone={this.onBookDone} \n            onDeleteBooking={this.onDeleteBooking} />\n        }\n        {\n          showConfirmDeleteModal &&\n          <AlertModal\n            isOpen={showConfirmDeleteModal}\n            title='Cancel Booking'\n            body='Are you sure to cancel this booking?'\n            inProgress={cancelBook}\n            onClickPositive={this.cancelBooking}\n            onClickNegative={() => this.setState({ showConfirmDeleteModal: false, activeBooking: undefined })}\n            />\n        }\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  user: state.user\n});\n\nexport default connect(mapStateToProps)(Bookings);\n","import React from 'react';\nimport {\n  Alert,\n  Modal,\n  ModalBody,\n  Row,\n  Col,\n  Form,\n  Input,\n  Label,\n  FormFeedback\n} from 'reactstrap';\nimport Button from 'reactstrap-button-loader';\nimport validator from 'validator';\nimport APIs from 'APIs';\n\nexport default class AddDoormanModal extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      alert: {\n        type: '',\n        message: ''\n      },\n      name: '',\n      nameErr: '',\n      email: '',\n      emailErr: '',\n      phoneNumber: '',\n      phoneNumberErr: '',\n      password: '',\n      passwordErr: '',\n      confirmPassword: '',\n      confirmPasswordErr: '',\n      addingDoorman: false\n    }\n  }\n\n  componentDidMount() {\n    const { activeDoorman } = this.props;\n    if (activeDoorman) {\n      this.setState({ name: activeDoorman.name, email: activeDoorman.email, phoneNumber: activeDoorman.phoneNumber });\n    }\n  }\n\n  onAddDoorman = () => {\n    const { activeDoorman, buildingId } = this.props;\n    const { name, email, phoneNumber, password, confirmPassword } = this.state;\n    if (!name) {\n      //this.setState({ nameErr: 'Invalid name' });\n      this.setState({ addingDoorman: false, alert: { type: 'danger', message: 'Invalid name'} });\n      return;\n    }\n    if (!email || !validator.isEmail(email)) {\n      this.setState({ addingDoorman: false, alert: { type: 'danger', message: 'Invalid email'} });\n      return;\n    }\n    if (!phoneNumber || !validator.isMobilePhone(phoneNumber)) {\n      this.setState({ addingDoorman: false, alert: { type: 'danger', message: 'Invalid phone number'} });\n      return;\n    }\n    if (!password) {\n      this.setState({ addingDoorman: false, alert: { type: 'danger', message: 'Invalid password'} });\n      return;\n    }\n    if (password.length < 6) {\n      this.setState({ addingDoorman: false, alert: { type: 'danger', message: 'Password must be atleast 6 length'} });\n      return;\n    }\n    if (!confirmPassword) {\n      this.setState({ addingDoorman: false, alert: { type: 'danger', message: 'Input confirm password'} });\n      return;\n    }\n    if ( password !== confirmPassword) {\n      this.setState({ addingDoorman: false, alert: { type: 'danger', message: 'Password not match'} });\n      return;\n    }\n    this.setState({ addingDoorman: true });\n    const params = {\n      id: activeDoorman ? activeDoorman.id : '',\n      name, email, phoneNumber, password: password, role: 'doorman', buildingId: buildingId\n    }\n    APIs.addDoorman(params).then(resp => {\n      const { data } = resp.data;\n      this.setState({ addingDoorman: false });\n      if (this.props.onAddedDoorman) {\n        this.props.onAddedDoorman(data);\n      }\n    }).catch(err => {\n      let message = err.message;\n      if (err.response) {\n        message = err.response.data.message;\n      }\n      this.setState({ addingDoorman: false, alert: { type: 'danger', message } });\n    });\n  }\n\n  render() {\n    const { isOpen, toggle, activeDoorman } = this.props;\n    const { alert, name, nameErr, email, emailErr, phoneNumber, phoneNumberErr, password, passwordErr, confirmPassword, confirmPasswordErr, addingDoorman } = this.state;\n    return (\n      <Modal size='lg' isOpen={isOpen} toggle={toggle} centered>\n        <ModalBody>\n          <div className='d-flex flex-grow-1 justify-content-between'>\n            <h4 className='mb-0 text-white'><strong>Add New Doorman</strong></h4>\n            <Button className='border-0 bg-transparent p-0' onClick={toggle}>\n              <img alt='...' src={require('assets/img/svg/cancel.svg')} width={30} height={30} />\n            </Button>\n          </div>\n          <Row className='mt-5'>\n            <Col xs='12' sm='6'>\n              <Form>\n                <Label><strong>FULL NAME</strong></Label>\n                <Input type='text'\n                  placeholder='Enter Name'\n                  value={name}\n                  onChange={e => this.setState({ name: e.target.value, nameErr: '' })}\n                  invalid={nameErr ? true : false} />\n              </Form>\n              <FormFeedback>{nameErr}</FormFeedback>\n            </Col>\n            <Col xs='12' sm='6' className='mt-3 mt-sm-0'>\n              <Form>\n                <Label><strong>ROLE</strong></Label>\n                <Input type='text' placeholder='Enter Role' value='Doorman' disabled />\n              </Form>\n            </Col>\n          </Row>\n          <Row className='mt-3 mt-sm-5'>\n            <Col xs='12' sm='6'>\n              <Form>\n                <Label><strong>EMAIL</strong></Label>\n                <Input type='email'\n                  placeholder='Enter Email'\n                  value={email}\n                  onChange={e => this.setState({ email: e.target.value, emailErr: '' })}\n                  invalid={emailErr ? true : false} />\n              </Form>\n              <FormFeedback>{emailErr}</FormFeedback>\n            </Col>\n            <Col xs='12' sm='6' className='mt-3 mt-sm-0'>\n              <Form>\n                <Label><strong>PHONE NUMBER</strong></Label>\n                <Input type='tel'\n                  placeholder='Enter Phone Number'\n                  value={phoneNumber}\n                  onChange={e => this.setState({ phoneNumber: e.target.value, phoneNumberErr: '' })}\n                  invalid={phoneNumberErr ? true : false} />\n              </Form>\n              <FormFeedback>{phoneNumberErr}</FormFeedback>\n            </Col>\n          </Row>\n          <Row className='mt-3 mt-sm-5'>\n            <Col xs='12' sm='6'>\n              <Form>\n                <Label><strong>PASSWORD</strong></Label>\n                <Input type='password'\n                  placeholder='Enter Password'\n                  value={password}\n                  onChange={e => this.setState({ password: e.target.value, emailErr: '' })}\n                  invalid={passwordErr ? true : false} />\n              </Form>\n              <FormFeedback>{passwordErr}</FormFeedback>\n            </Col>\n            <Col xs='12' sm='6' className='mt-3 mt-sm-0'>\n              <Form>\n                <Label><strong>CONFIRM PASSWORD</strong></Label>\n                <Input type='password'\n                  placeholder='Repeat Password'\n                  value={confirmPassword}\n                  onChange={e => this.setState({ confirmPassword: e.target.value, phoneNumberErr: '' })}\n                  invalid={confirmPasswordErr ? true : false} />\n              </Form>\n              <FormFeedback>{confirmPasswordErr}</FormFeedback>\n            </Col>\n          </Row>\n          {alert.message && <Alert color={alert.type} className='mt-4'>{alert.message}</Alert>}\n          <div className='d-flex justify-content-end mt-5'>\n            <Button className='bg-white text-darkgray p-2'\n              onClick={toggle}>\n              <small style={{fontWeight: 'bold'}}>CLOSE</small>\n            </Button>\n            <Button className='bg-blue text-white border-0 p-2 ml-3'  \n              loading={addingDoorman}\n              disabled={addingDoorman}\n              onClick={this.onAddDoorman}>\n              <small style={{fontWeight: 'bold'}}>{activeDoorman ? 'EDIT DOORMAN' : 'ADD DOORMAN'}</small>\n            </Button>\n          </div>\n        </ModalBody>\n      </Modal>\n    )\n  }\n}\n","import React from 'react';\nimport { Alert, Row, Col, ListGroup, ListGroupItem } from 'reactstrap';\nimport Button from 'reactstrap-button-loader';\nimport _ from 'lodash';\nimport AddDoormanModal from 'modals/AddDoormanModal';\nimport LoadingOverlay from 'react-loading-overlay';\nimport { connect } from 'react-redux';\nimport APIs from 'APIs';\nimport { AlertModal } from 'modals/AlertModal';\n\nclass AddDoormen extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      alert: {\n        type: '',\n        message: ''\n      },\n      isLoading: false,\n      showConfirmCancelModal: false,\n      cancellingDoorman: false,\n      doormen: [],\n      activeDoorman: undefined\n    }\n  }\n\n  componentDidMount() {\n    this.getDoormen();\n  }\n\n  getDoormen = () => {\n    if (!this.props.user.id) {\n      return;\n    }\n    const params = {\n      buildingId: this.props.user.buildingId,\n      role: this.props.user.role\n    }\n    this.setState({ isLoading: true });\n    APIs.getDoormen(params).then(resp => {\n      this.setState({ doormen: resp.data.data, isLoading: false });\n    }).catch(err => {\n      let message = err.message;\n      if (err.response) {\n        message = err.response.data.message;\n      }\n      this.setState({ alert: { type: 'danger', message }, isLoading: false });\n    })\n  }\n\n  onAddedDoorman = (doorman) => {\n    let { doormen } = this.state;\n    const index = _.findIndex(doormen, d => d.id === doorman.id);\n    if (index !== -1) {\n      doormen[index] = doorman;\n    } else {\n      doormen = [doorman, ...doormen];\n    }\n    this.setState({ doormen, showAddDoormanModal: false });\n  }\n\n  showConfirmCancelModal = (doorman) => {\n    this.setState({ showConfirmCancelModal: true, activeDoorman: doorman });\n  }\n\n  cancelDoorman = () => {\n    const { activeDoorman } = this.state;\n    if (activeDoorman) {\n      const params = {\n        doormanId: activeDoorman.id\n      };\n      this.setState({ cancellingDoorman: true });\n      APIs.cancelDoorman(params).then(resp => {\n        const { doormanId } = resp.data.data;\n        let { doormen } = this.state;\n        _.remove(doormen, m => m.id == doormanId);\n        this.setState({ doormen, showConfirmCancelModal: false, cancellingDoorman: false });\n      }).catch(err => {\n        let message = err.message;\n        if (err.response) {\n          message = err.response.data.message;\n        }\n        this.setState({ alert: { type: 'danger', message }, cancellingDoorman: false })\n      })\n    }\n  }\n\n  renderDoormen = () => {\n    const { doormen, isLoading } = this.state;\n    return (\n      <LoadingOverlay active={isLoading} spinner>\n        <ListGroup>\n          {\n            _.map(doormen, man => (\n              <ListGroupItem key={man.id} className='shadow-sm py-3 mt-3'>\n                <Row className='mx-0 bg-white'>\n                  <Col xs='6' sm='auto' lg='2' className='px-1 px-sm-3'>\n                    <h6><strong>NAME</strong></h6>\n                    <h6 className='mb-0'>{man.name}</h6>\n                  </Col>\n                  <Col xs='6' sm='auto' lg='3' className='px-1 px-sm-3'>\n                    <h6><strong>EMAIL</strong></h6>\n                    <h6 className='mb-0'>{man.email}</h6>\n                  </Col>\n                  <Col xs='6' sm='auto' lg='3' className='mt-3 mt-sm-0 px-1 px-sm-3'>\n                    <h6><strong>PHONE NUMBER</strong></h6>\n                    <h6 className='mb-0'>{man.phoneNumber}</h6>\n                  </Col>\n                  <Col xs='6' sm='auto' lg='auto' className='mt-3 mt-sm-0 px-1 px-sm-3'>\n                    <h6><strong>ROLE</strong></h6>\n                    <h6 className='mb-0'>{_.upperFirst(man.role)}</h6>\n                  </Col>\n                  <Col className='d-flex justify-content-end align-items-center mt-3 mt-sm-0 px-1 px-sm-3'>\n                    <Button className='bg-blue border-0 text-white' onClick={() => this.setState({ activeDoorman: man, showAddDoormanModal: true })}>Edit</Button>\n                    <Button className='bg-reject border-0 text-white ml-2' onClick={() => this.showConfirmCancelModal(man)}>Cancel</Button>\n                  </Col>\n                </Row>\n              </ListGroupItem>\n            ))\n          }\n        </ListGroup>\n      </LoadingOverlay>\n    )\n  }\n\n  render() {\n    const { alert, showAddDoormanModal, showConfirmCancelModal, cancellingDoorman, activeDoorman } = this.state;\n    return (\n      <div className='my-4 mx-2 mx-lg-5'>\n        {alert.message && <Alert color={alert.type}>{alert.message}</Alert>}\n        <div className='d-flex justify-content-end mb-4'>\n          <Button className='bg-accept border-0' onClick={() => this.setState({ showAddDoormanModal: true, activeDoorman: undefined })}>\n          + Add New Doorman\n          </Button>\n        </div>\n        {this.renderDoormen()}\n        {\n          showAddDoormanModal &&\n          <AddDoormanModal\n            isOpen={showAddDoormanModal}\n            activeDoorman={activeDoorman}\n            buildingId={this.props.user.buildingId}\n            toggle={() => this.setState({ showAddDoormanModal: false, activeDoorman: undefined })}\n            onAddedDoorman={this.onAddedDoorman} />\n        }\n        {\n          showConfirmCancelModal &&\n          <AlertModal\n            isOpen={showConfirmCancelModal}\n            title='Cancel'\n            body='Are you sure to cancel this doorman?'\n            inProgress={cancellingDoorman}\n            onClickPositive={this.cancelDoorman}\n            onClickNegative={() => this.setState({ showConfirmCancelModal: false, activeDoorman: undefined })}\n            />\n        }\n      </div>\n    )\n  }\n}\nconst mapStateToProps = (state) => ({\n  user: state.user\n})\n\nexport default connect(mapStateToProps)(AddDoormen);\n","import React from 'react';\nimport { ModalHeader, Modal, ModalBody, ModalFooter, Form, Label, Input, FormFeedback } from 'reactstrap';\nimport Button from 'reactstrap-button-loader';\nimport APIs from 'APIs';\nimport { ChromePicker } from 'react-color';\n\nexport default class EditApartmentModal extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      names: '',\n      namesErr: '',\n      aptColorHex: '',\n      showColorPicker: false\n    }\n  }\n\n  onOpened = () => {\n    const { activeApt } = this.props;\n    if (activeApt) {\n      this.setState({ names: activeApt.aptNames, aptColorHex: activeApt.aptColorHex });\n    }\n  }\n\n  save = () => {\n    const { names, aptColorHex } = this.state;\n    if (!names) {\n      this.setState({ namesErr: 'Names cannot be empty' });\n      return;\n    }\n    const params = {\n      aptId: this.props.activeApt.id,\n      aptNumber: this.props.activeApt.aptNumber,\n      names,\n      aptColorHex\n    }\n    this.setState({ saving: true });\n    APIs.editApartment(params).then(resp => {\n      this.setState({ saving: false });\n      if (this.props.onEditDone) {\n        this.props.onEditDone(resp.data.data)\n      }\n    }).catch(err => {\n      this.setState({ saving: false });\n    });\n  }\n\n  render() {\n    const { isOpen, toggle } = this.props;\n    const { names, namesErr, saving, showColorPicker, aptColorHex } = this.state;\n    return (\n      <Modal isOpen={isOpen} toggle={toggle} onOpened={this.onOpened} centered>\n        <ModalHeader>\n          Assign names to apartment\n        </ModalHeader>\n        <ModalBody>\n          <div>\n            <Label>Apartment Color</Label>\n            <div style={{ width: 40, height: 25, backgroundColor: aptColorHex, cursor: 'pointer' }}\n              onClick={() => this.setState({ showColorPicker: true })}/>\n            {\n              showColorPicker &&\n              <div style={{ positive: 'absolute', zIndex: 2 }}>\n                <ChromePicker color={aptColorHex} onChange={color => this.setState({ aptColorHex: color.hex })} />\n              </div>\n            }\n          </div>\n          <Form className='mt-2'>\n            <Label>\n              Separate the names with comma(,)\n            </Label>\n            <Input\n              type='text'\n              value={names}\n              onChange={e => this.setState({ names: e.target.value })}\n              invalid={namesErr ? true : false}\n              />\n          </Form>\n          <FormFeedback>{namesErr}</FormFeedback>\n        </ModalBody>\n        <ModalFooter>\n          <div className='d-flex justify-content-end'>\n            <Button\n              className='bg-white text-darkgray p-2'\n              onClick={toggle}>\n              <small style={{fontWeight: 'bold'}}>CANCEL</small>\n            </Button>\n            <Button className='bg-blue text-white border-0 p-2 ml-3'\n              loading={saving}\n              disabled={saving}\n              onClick={this.save}>\n              <small style={{fontWeight: 'bold'}}>SAVE</small>\n            </Button>\n          </div>\n        </ModalFooter>\n      </Modal>\n    )\n  }\n}\n","import React from 'react';\nimport { Row, Col, ListGroup, ListGroupItem, Button } from 'reactstrap';\nimport { AlertModal } from 'modals/AlertModal';\nimport EditApartmentModal from 'modals/EditApartmentModal';\nimport APIs from 'APIs';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\n\nclass Apartments extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      alert: {\n         type: '',\n         message: ''\n      },\n      apartments: [],\n      activeApt: undefined,\n      showEditAptModal: false,\n      deletingApt: false,\n      showConfirmDeleteModal: false\n    }\n  }\n\n  componentDidMount() {\n    this.getApartments();\n  }\n\n  getApartments = () => {\n    const params = {\n      buildingId: this.props.user.buildingId\n    }\n    APIs.getApartments(params).then(resp => {\n      this.setState({ apartments: resp.data.data });\n    }).catch(err => {\n      let message = err.message;\n      if (err.response) {\n        message = err.response.data.message;\n      }\n      this.setState({ alert: { type: 'danger', message } })\n    });\n  }\n\n  showConfirmCancelModal = (apt) => {\n    this.setState({ showConfirmCancelModal: true, activeApt: apt });\n  }\n\n  deleteApt = () => {\n    const { activeApt } = this.state;\n    if (activeApt) {\n      this.setState({ deletingApt: true });\n      const params = {\n        aptNumber: activeApt.aptNumber\n      }\n      APIs.deleteApartment(params).then(resp => {\n        const { aptNumber } = resp.data.data;\n        let { apartments } = this.state;\n        if (apartments.length > 0) {\n          _.remove(apartments, apt => apt.aptNumber == aptNumber)\n          this.setState({ apartments, deletingApt: false, showConfirmDeleteModal: false, activeApt: undefined });\n        }\n      }).catch(err => {\n        this.setState({ deletingApt: false });\n      });\n    }\n  }\n\n  onEditDone = (apt) => {\n    let { apartments } = this.state;\n    const index = _.findIndex(apartments, a => a.id === apt.aptId);\n    if (index !== -1) {\n      apartments[index].aptNames = apt.aptNames;\n      apartments[index].aptColorHex = apt.aptColorHex;\n    }\n    this.setState({ apartments, showEditAptModal: false });\n  }\n\n  renderApts = () => {\n    const { apartments } = this.state;\n    return (\n      <ListGroup>\n      {\n        _.map(apartments, apt => (\n          <ListGroupItem key={apt.aptNumber} className='mt-3 py-3 shadow-sm'>\n            <Row>\n              <Col xs='6' sm='3'>\n                <h6><strong>Apartment #</strong></h6>\n                <h6 className='mb-0'>{apt.aptNumber}</h6>\n              </Col>\n              <Col xs='6' sm='3'>\n                <h6><strong>Apartment Color</strong></h6>\n                <div style={{ width: 40, height: 25, backgroundColor: apt.aptColorHex }} />\n              </Col>\n              <Col xs='6' sm='4' className='mt-3 mt-md-0'>\n                <h6><strong>Apartment Name</strong></h6>\n                <h6 className='ml-2'>{apt.aptNames}</h6>\n              </Col>\n              <Col xs='6' sm='2' className='d-flex align-items-center justify-content-center mt-3 mt-md-0'>\n                <Button className='bg-blue border-0'\n                  onClick={() => this.setState({ showEditAptModal: true, activeApt: apt })}>Edit</Button>\n                <Button className='bg-reject border-0 ml-2'\n                  onClick={() => this.setState({ showConfirmDeleteModal: true, activeApt: apt })}>Cancel</Button>\n              </Col>\n            </Row>\n          </ListGroupItem>\n        ))\n      }\n      </ListGroup>\n    )\n  }\n\n  render() {\n    const { className } = this.props;\n    const {\n      showConfirmDeleteModal,\n      showEditAptModal,\n      activeApt,\n      deletingApt\n    } = this.state;\n\n    return (\n      <div className={className ? className : 'my-5 mx-2 mx-lg-5'}>\n        {this.renderApts()}\n        {\n          showEditAptModal &&\n          <EditApartmentModal\n            isOpen={showEditAptModal}\n            toggle={() => this.setState({ showEditAptModal: false, activeApt: undefined })}\n            activeApt={activeApt}\n            onEditDone={this.onEditDone} />\n        }\n        {\n          showConfirmDeleteModal &&\n          <AlertModal\n            isOpen={showConfirmDeleteModal}\n            title='Cancel Apartment'\n            body='Are you sure to delete this apartment?'\n            inProgress={deletingApt}\n            onClickPositive={this.deleteApt}\n            onClickNegative={() => this.setState({ showConfirmDeleteModal: false, activeApt: undefined })}\n            />\n        }\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  user: state.user\n});\n\nexport default connect(mapStateToProps)(Apartments);","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport moment from \"moment\";\r\nimport TimePicker from \"rc-time-picker\";\r\nimport \"rc-time-picker/assets/index.css\";\r\n\r\nconst SlotTimePicker = ({ className, onChange, value, ...rest }) => (\r\n  <TimePicker\r\n    {...rest}\r\n    className={className}\r\n    popupClassName={className}\r\n    showSecond={false}\r\n    onChange={onChange}\r\n    hideDisabledOptions\r\n    minuteStep={15}\r\n    value={value}\r\n    use12Hours\r\n    disabledHours={() => [0, 1, 2, 3, 4, 5, 6, 7, 22, 23]}\r\n    allowEmpty={false}\r\n    inputReadOnly\r\n  />\r\n);\r\n\r\nSlotTimePicker.propTypes = {\r\n  onChange: PropTypes.func.isRequired,\r\n  value: PropTypes.instanceOf(moment)\r\n};\r\n\r\nexport default SlotTimePicker;\r\n","import React from 'react';\nimport { Alert, Card, Input } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { updateUser } from 'redux/user/actions';\n//import TimePicker from 'rc-time-picker';\nimport APIs from 'APIs';\n//import 'rc-time-picker/assets/index.css';\nimport _ from 'lodash';\nimport moment from 'moment';\nimport Button from 'reactstrap-button-loader';\nimport TimePicker from \"../components/TimePicker\";\n\nconst times = [\n  { id: 0, start: moment('08:00', 'hh:mm'), end: moment('09:00', 'hh:mm') }\n];\n\nclass Setting extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      bookingDateLimit: '7',\n      timeSlots: times,\n      alert: {\n        type: '',\n        message: ''\n      },\n    }\n\n    this.onSaveTimeSlots=this.onSaveTimeSlots.bind(this);\n  }\n\n  componentDidMount() {\n    if ( this.props.user.booking_limit ) {\n      this.setState({ bookingDateLimit: this.props.user.booking_limit });\n    }\n    this.onGetTimeSlots();\n  }\n\n  onGetTimeSlots = () => {\n    const params = { buildingId: this.props.user.buildingId };\n    APIs.getTimeSlots(params).then(resp => {\n      const {data} = resp.data;\n      if ( data.length !== 0 ) {\n        var times = [];\n        _.forEach(data, slot => {\n            times.push({ id: slot.localId, start: moment(slot.start, 'hh:mm'), end: moment(slot.end, 'hh:mm') });\n        });\n        this.setState({ timeSlots: times });\n      }      \n    }).catch(err => {\n      let message = err.message;\n      if (err.response) {\n        message = err.response.data.message;\n      }\n      this.setState({ alert: { type: 'danger', message } });\n    });\n  }\n\n  disabledHours = () => [0, 1, 2, 3, 4, 5, 6, 7, 22, 23];\n\n  onChangeStartTime = (id, v) => {\n    let timeSlots = [...this.state.timeSlots];\n    let index = timeSlots.findIndex(el => el.id === id);\n    let item = {...timeSlots[index]};\n    item.start = v;\n    timeSlots[index] = item;\n    this.setState({timeSlots});\n  }\n\n  onChangeEndTime = (id, v) => {\n    let timeSlots = [...this.state.timeSlots];\n    let index = timeSlots.findIndex(el => el.id === id);\n    let item = {...timeSlots[index]};\n    item.end = v;\n    timeSlots[index] = item;\n    this.setState({timeSlots});\n  }\n\n  onChangeBookingLimit = (e) => {\n    const selectedLimit = e.target.value;    \n    const params = {\n      bookingDateLimit: selectedLimit,\n      userId: this.props.user.id\n    }\n    APIs.saveBookDateLimit(params).then(resp => {\n      this.setState({ bookingDateLimit: selectedLimit });\n      this.props.updateUser({ ...this.props.user, booking_limit: selectedLimit });\n    });\n  }\n\n  addNewTimeSlot = (id) => {\n    const params = this.state.timeSlots;\n    if ( params.length > 0 ) {\n      const last = params[params.length-1];\n      if ( last.start.isSame(last.end) || last.start.isAfter(last.end)) {\n        this.setState({ alert: { type: 'danger', message: 'Invalid time range' } });\n        return;\n      }\n      if ( params.length > 1){\n        const past = params[params.length-2];\n        if ( past.end.isAfter(last.start) ) {\n          this.setState({ alert: { type: 'danger', message: 'Invalid time range' } });\n          return;\n        }\n      }\n      if ( last.end.isValid() ) {\n        this.setState({ alert: { type: 'danger', message: '' } });\n        this.setState({\n          timeSlots:[...this.state.timeSlots, {id: last.id+1, start: last.end, end: last.end}]\n        });\n      }\n    }    \n  }  \n\n  removeLastTimeSlot = (id) => {\n    this.setState({\n      timeSlots: this.state.timeSlots.filter(function(slot) { \n        return slot.id !== id\n      })\n    });\n  }\n\n  onRenderTimeSlots = () => {\n    const { timeSlots } = this.state;\n    return _.map(timeSlots, slot => \n      (\n        <div className='mt-2' key={slot.id}>\n          <TimePicker className='timepicker' disabled={slot.id===timeSlots.length-1?false:true} value={slot.start} onChange={(v)=>this.onChangeStartTime(slot.id, v)} />&nbsp; - &nbsp;\n          <TimePicker className='timepicker' disabled={slot.id===timeSlots.length-1?false:true} value={slot.end} onChange={(v)=>this.onChangeEndTime(slot.id, v)}  />\n          { slot.id===timeSlots.length-1 && \n              <img alt='...' style={{cursor:'pointer'}} src={require('assets/img/svg/plus.svg')} width={20} height={20} className='ml-4' onClick={()=> this.addNewTimeSlot(slot.id)} />\n          }     \n          { slot.id===timeSlots.length-1 && slot.id!==0 &&\n              <img alt='...' style={{cursor:'pointer'}} src={require('assets/img/svg/remove.svg')} width={20} height={20} className='ml-2' onClick={()=> this.removeLastTimeSlot(slot.id)} />\n          }    \n        </div>\n      )\n    )\n  }\n\n  onSaveTimeSlots = () => {\n    const { timeSlots } = this.state;\n    if ( timeSlots.length < 3 ) {\n      this.setState({ alert: { type: 'danger', message: 'Add atleast 3 timeslots' } });\n      return;\n    }\n\n    var slotparam = [];\n    _.forEach(timeSlots, slot => {\n        if ( slot.start.isAfter(slot.end)) {\n          this.setState({ alert: { type: 'danger', message: 'Invalid time range' } });\n          return;\n        }\n        slotparam.push({ id: slot.id, start: slot.start.format('HH:mm'), end: slot.end.format('HH:mm') });\n    });\n    const params = { buildingId: this.props.user.buildingId, timeSlots: slotparam };    \n    console.log(params);\n    APIs.saveTimeSlots(params).then(resp => {\n      this.setState({ alert: { type: 'success', message: 'Saved' } });\n    }).catch(err => {\n      let message = err.message;\n      if (err.response) {\n        message = err.response.data.message;\n      }\n      this.setState({ alert: { type: 'danger', message } });\n    });    \n  }\n\n  render() {\n    const { bookingDateLimit, alert } = this.state;\n    return (\n        <div className='d-flex flex-column my-4 mx-2 mx-lg-5'>\n          <Card className='shadow-sm px-4 py-4 mt-5'>\n            <h6 className='text-darkgray'><strong>SET BOOKING DATE LIMIT</strong></h6>\n            <Input type='select' className='col-lg-3 col-md-6'\n                value={bookingDateLimit}\n                onChange={this.onChangeBookingLimit}>\n                <option key={7} value={7}>1 week</option>\n                <option key={14} value={14}>2 weeks</option>\n            </Input>\n          </Card>\n\n          <h6 className='text-darkgray mt-4'><strong>TIME SLOT</strong></h6>\n          <Card className='shadow-sm px-3 py-4'>\n            <div className='col-lg-6 col-md-10'>\n              {this.onRenderTimeSlots()}\n            </div>\n            <div style={{textAlign: 'center'}}>\n              { alert.message && <Alert color={alert.type} className='mt-3'>{alert.message}</Alert> }\n              <Button className='bg-blue border-0 shadow-sm mt-4' onClick={this.onSaveTimeSlots}>SAVE</Button>\n            </div>  \n          </Card>\n\n          <h6 className='mt-5'>\n            Tap&nbsp;\n            <a target='_blank' rel='noopener noreferrer' href='https://www.topazsystems.com/software/sigweb.exe'>here</a>\n            &nbsp;to download the driver of Topaz Sign pad\n          </h6>\n        </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  user: state.user\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  updateUser: (user) => dispatch(updateUser(user))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Setting);\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Row, Col } from 'reactstrap';\r\nimport Button from 'reactstrap-button-loader';\r\nimport { AlertModal } from 'modals/AlertModal';\r\nimport APIs from 'APIs';\r\nimport { updateUser } from 'redux/app/actions';\r\n\r\nclass Subscription extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            showUpgradeConfirmModal: false,\r\n            upgradingPlan: false,\r\n            plan: 'monthly',\r\n            changePlan: '',\r\n            monthly_price: 0,\r\n            monthly_save: 0,\r\n            quarterly_price: 0,\r\n            quarterly_save: 0,\r\n            biyearly_price: 0,\r\n            biyearly_save: 0\r\n        }\r\n\r\n        this.onGetSubscriptionOptions();\r\n    }\r\n  \r\n    onGetSubscriptionOptions() {\r\n        const {subscribedPlan} = this.props.user;\r\n        APIs.getSubscriptionOptions().then(resp => {\r\n          let { data } = resp.data;\r\n          this.setState({ \r\n            monthly_price: data.monthly_price, quarterly_price: data.quarterly_price, biyearly_price: data.biyearly_price,\r\n            monthly_save: data.monthly_save, quarterly_save: data.quarterly_save, biyearly_save: data.biyearly_save, plan: subscribedPlan\r\n          });\r\n        });\r\n    }\r\n\r\n    onMonthlySelect = () => {\r\n        if ( this.state.plan !== 'monthly' ){\r\n            this.setState({changePlan: 'monthly', showUpgradeConfirmModal: true});\r\n        }        \r\n    }\r\n\r\n    onQuarterlySelect = () => {\r\n        if ( this.state.plan !== 'quarterly' ){\r\n            this.setState({changePlan: 'quarterly', showUpgradeConfirmModal: true});\r\n        } \r\n    }\r\n\r\n    onBiYearlySelect = () => {\r\n        if ( this.state.plan !== 'biyearly' ){\r\n            this.setState({changePlan: 'biyearly', showUpgradeConfirmModal: true});\r\n        } \r\n    }\r\n\r\n    upgradePlan = () => {\r\n        this.setState({ upgradingPlan: true });\r\n        // update the subscription\r\n        const params = {\r\n            userId: this.props.user.id,\r\n            plan: this.state.changePlan\r\n        }\r\n        APIs.updateStripeSubscription(params).then(resp => {\r\n            this.setState({ upgradingPlan: false, showUpgradeConfirmModal: false, plan: params.plan });\r\n            this.props.updateUser({ ...this.props.user, subscribedPlan: params.plan });\r\n        })\r\n        .catch(err => {\r\n            let message = err.message;\r\n            if (err.response) {\r\n                message = err.response.data.message;\r\n            }\r\n            this.setState({ alert: { type: 'danger', message }, upgradingPlan: false });\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const {monthly_price, monthly_save, quarterly_price, quarterly_save, biyearly_price, biyearly_save, plan, showUpgradeConfirmModal, upgradingPlan, changePlan} = this.state;\r\n        const buttonborder = { borderColor: '#0087B4', borderWidth: 3 };\r\n        const typeStyle = {fontSize: 25, fontWeight: 'bold'};\r\n        const priceStyle = {fontSize: 70, fontWeight: 'bold'};\r\n\r\n        return (\r\n            <div className='d-flex flex-column my-4 mx-lg-5'>\r\n                <div className='bg-white border-0 rounded shadow-sm mt-3'>\r\n                    <div className='d-flex justify-content-center'>\r\n                        <div className='mt-lg-5 w-90' style={{ height: 2, backgroundColor: 'lightgrey', opacity: 0.5 }} />\r\n                    </div>\r\n\r\n                    <div className='d-flex justify-content-center'>\r\n                        <Row className='w-90 mt-lg-5 mb-lg-5'>\r\n                            <Col lg='4' style={{textAlign: 'center', color: '#0087B4'}}>\r\n                                <p style={typeStyle}>Monthly</p>\r\n                                <p style={priceStyle}>${monthly_price}</p>\r\n                                { monthly_save !== 0 && \r\n                                    <p style={priceStyle}>Save ${monthly_save}</p>\r\n                                } \r\n                                <Button className={plan==='monthly'?'bg-tint':'bg-white blue-tint'} style={buttonborder} onClick={this.onMonthlySelect}>\r\n                                    <strong style={{fontSize: 25}}>\r\n                                    {plan === 'monthly' ? 'Current Plan' : 'Choose Plan'}\r\n                                    </strong>\r\n                                </Button>\r\n                            </Col>\r\n\r\n                            <Col lg='4' style={{textAlign: 'center', color: '#0087B4'}}>\r\n                                <p style={typeStyle}>Quarterly</p>\r\n                                <p style={priceStyle}>${quarterly_price}</p>\r\n                                { quarterly_save !== 0 && \r\n                                    <p style={priceStyle}>Save ${quarterly_save}</p>\r\n                                }\r\n                                <Button className={plan==='quarterly'?'bg-tint':'bg-white blue-tint'} style={buttonborder} onClick={this.onQuarterlySelect}>\r\n                                    <strong style={{fontSize: 25}}>\r\n                                    {plan === 'quarterly' ? 'Current Plan' : 'Choose Plan'}\r\n                                    </strong>\r\n                                </Button>\r\n                            </Col>\r\n\r\n                            <Col lg='4' style={{textAlign: 'center', color: '#0087B4'}}>\r\n                                <p style={typeStyle}>Bi Yearly</p>\r\n                                <p style={priceStyle}>${biyearly_price}</p>\r\n                                { biyearly_save !== 0 && \r\n                                    <p style={priceStyle}>Save ${biyearly_save}</p>\r\n                                }\r\n                                <Button className={plan==='biyearly'?'bg-tint':'bg-white blue-tint'} style={buttonborder} onClick={this.onBiYearlySelect}>\r\n                                    <strong style={{fontSize: 25}}>\r\n                                    {plan === 'biyearly' ? 'Current Plan' : 'Choose Plan'}\r\n                                    </strong>\r\n                                </Button>\r\n                            </Col>\r\n                        </Row>\r\n                    </div>                    \r\n                </div>\r\n                {\r\n                showUpgradeConfirmModal &&\r\n                <AlertModal\r\n                    isOpen={showUpgradeConfirmModal}\r\n                    title='Upgrade Plan'\r\n                    body={\r\n                    <h6 className='f-family-poppins-lt' style={{ lineHeight: 1.5 }}>\r\n                        Are you sure to change to <strong>{changePlan==='monthly'?'Monthly':changePlan==='quarterly'?'Quarterly':'Bi Yearly'}</strong> plan?\r\n                    </h6>\r\n                    }\r\n                    inProgress={upgradingPlan}\r\n                    onClickPositive={this.upgradePlan}\r\n                    onClickNegative={() => this.setState({ showUpgradeConfirmModal: false })}\r\n                />\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.user\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    updateUser: (user) => dispatch(updateUser(user))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Subscription);\r\n","import React from 'react';\nimport Headerbar from 'components/Headerbar';\nimport MainMenus from 'components/MainMenus';\nimport FullCalendar from './FullCalendar';\nimport Registrations from './Registrations';\nimport Bookings from './Bookings';\nimport AddDoormen from './AddDoormen';\nimport Apartments from './Apartments';\nimport Setting from './Setting';\nimport Subscription from './Subscription';\nimport APIs from 'APIs';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { updateUser } from 'redux/user/actions';\nimport ls from 'local-storage';\n\nconst adminMenus = ['Calendar', 'Registrations', 'Bookings', 'Apartments', 'Doormen', 'Setting'];\nconst doormenMenus = ['Calendar', 'Bookings'];\nconst shareholderMenus = ['Calendar', 'Bookings', 'Subscription'];\n\nclass Dashboard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoggedIn: true,\n      activeMenu: 'Calendar',\n      isOpenPopover: false\n    }\n  }\n\n  componentDidMount() {\n    this.getUserInfo().then(userData => {\n      this.props.updateUser(userData);\n    }).catch(err => {\n      this.setState({ isLoggedIn: false })\n    });\n  }\n\n  getUserInfo = () => {\n    return new Promise((res, rej) => {\n      APIs.getUserInfo().then(resp => {\n        res(resp.data.data);\n      }).catch(err => {\n        rej(err);\n      })\n    });\n  }\n\n  onSignout = () => {\n    APIs.userSignout().then(resp => {\n      if (resp.data.success) {\n        ls.set('isLoggedIn', false);\n        ls.set('lastLoggedInAt', null);\n        ls.set('refreshToken', null);\n        this.props.updateUser({\n          id: 0,\n          name: undefined,\n          email: undefined,\n          phoneNumber: undefined,\n          aptNumber: undefined,\n          role: undefined,\n          confirmed: 0,\n          createdAt: undefined\n        });\n        this.props.history.push('/sign-in');\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  render() {\n    const { activeMenu, isLoggedIn, isOpenPopover } = this.state;\n    const { user } = this.props;\n    return (\n      !isLoggedIn ? <Redirect to={{ pathname: 'sign-in' }}/> : <div className='d-flex flex-column flex-fill bg-secondary'>\n        <Headerbar isOpenPopover={isOpenPopover}\n          showPopover={() => this.setState({ isOpenPopover: true })}\n          togglePopover={() => this.setState({ isOpenPopover: false })}\n          onSignout={this.onSignout} />\n        <MainMenus className='mt-3 mt-lg-5'\n          onClick={() => this.setState({ isOpenPopover: false })}\n          menus={(user && user.role === 'admin') ? adminMenus : (user && user.role === 'doorman') ? doormenMenus : shareholderMenus}\n          activeMenu={activeMenu}\n          onChangeMenu={(menu) => this.setState({ activeMenu: menu })} />\n        <div onClick={() => this.setState({ isOpenPopover: false })}>\n          {\n            activeMenu === 'Calendar' &&\n            <FullCalendar />\n          }\n          {\n            activeMenu === 'Registrations' &&\n            <Registrations />\n           }\n           {\n             activeMenu === 'Bookings' &&\n             <Bookings />\n           }\n           {\n             activeMenu === 'Apartments' &&\n             <Apartments />\n           }\n           {\n             activeMenu === 'Doormen' &&\n             <AddDoormen />\n           }\n           {\n             activeMenu === 'Setting' &&\n             <Setting />\n           }\n           {\n             activeMenu === 'Subscription' &&\n             <Subscription />\n           }\n         </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  user: state.user\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  updateUser: (user) => dispatch(updateUser(user))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashboard);\n","import React from 'react';\nimport {\n  Alert,\n  Row,\n  Col,\n  Card,\n  InputGroup,\n  FormGroup,\n  InputGroupAddon,\n  InputGroupText,\n  Input,\n  FormFeedback,\n  Form\n} from 'reactstrap';\nimport Button from 'reactstrap-button-loader';\nimport { isMobile } from 'react-device-detect';\nimport APIs from 'APIs';\n\nexport default class ResetPassword extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      alert: {\n        type: '',\n        message: ''\n      },\n      password: '',\n      passwordError: '',\n      confirmPassword: '',\n      confirmPasswordError: '',\n      sending: false\n    }\n  }\n\n  resetPassword = () => {\n    console.log('Reset password');\n    const { password, confirmPassword } = this.state;\n    if (!password) {\n      this.setState({ passwordError: 'New password field cannot be empty' });\n      return;\n    }\n    if (!confirmPassword) {\n      this.setState({ confirmPasswordError: 'Confirm password field cannot be empty' });\n      return;\n    }\n    if (password !== confirmPassword) {\n      this.setState({ confirmPasswordError: 'Confirm password must match with new password' });\n      return;\n    }\n    if (password.length < 5) {\n      this.setState({ passwordError: 'New password must be at least 5 characters' });\n      return;\n    }\n    const userId = this.props.match.params.id;\n    const token = this.props.match.params.token;\n    this.setState({ sending: true });\n    APIs.storePassword({ userId, token, password }).then(resp => {\n      this.setState({ sending: false });\n      this.props.history.push('/sign-in');\n    }).catch(err => {\n      let message;\n      if (err.response) {\n        message = err.response.data.message;\n      } else {\n        message = err.message;\n      }\n      this.setState({ sending: false, alert: { type: 'danger', message } });\n    })\n  }\n\n  render() {\n    const {\n      alert,\n      password,\n      passwordError,\n      confirmPassword,\n      confirmPasswordError,\n      sending\n    } = this.state;\n    return (\n      <div className='d-flex flex-column flex-fill'>\n        <Row className='d-flex flex-fill'>\n          <Col xs='12' lg='6' className=\"d-flex flex-column flex-fill justify-content-center\">\n              <img alt='...' src={require('assets/img/png/login-left.png')} className='login-left-img' />\n          </Col>\n          <Col xs='12' lg='6' className='d-flex flex-column flex-fill align-items-center justify-content-center'>\n            <img alt='...' src={require('assets/img/png/homepage-logo.png')} width={400} />\n            <Card className={'d-flex flex-column align-items-center border-1 bg-white mt-4 ' + (isMobile ? 'w-90' : 'w-75')}>\n              <h4 className='blue-tint text-bold mt-3'>Reset Password</h4>\n              <h5 className='blue-tint mt-1'>Please input your new password</h5>\n              <FormGroup className='w-90 mt-4'>\n                <Form className='mt-4' autoComplete='off'>\n                  <InputGroup>\n                    <InputGroupAddon addonType='prepend'>\n                      <InputGroupText className='bg-white border-top-0 border-left-0 border-right-0 rounded-0'>\n                        <img alt='...' src={require('assets/img/svg/padlock.svg')} width={20} height={20} />\n                      </InputGroupText>\n                    </InputGroupAddon>\n                    <Input type='password'\n                      placeholder='Enter your password'\n                      className='border-top-0 border-left-0 border-right-0 rounded-0'\n                      value={password}\n                      onChange={event => this.setState({ password: event.target.value, passwordError: '' })}\n                      invalid={passwordError ? true : false} />\n                  </InputGroup>\n                </Form>\n                <FormFeedback>{passwordError}</FormFeedback>\n                <Form className='mt-4' autoComplete='off'>\n                  <InputGroup>\n                    <InputGroupAddon addonType='prepend'>\n                      <InputGroupText className='bg-white border-top-0 border-left-0 border-right-0 rounded-0'>\n                        <img alt='...' src={require('assets/img/svg/padlock.svg')} width={20} height={20} />\n                      </InputGroupText>\n                    </InputGroupAddon>\n                    <Input type='password'\n                      placeholder='Enter your confirm password'\n                      className='border-top-0 border-left-0 border-right-0 rounded-0'\n                      value={confirmPassword}\n                      onChange={event => this.setState({ confirmPassword: event.target.value, confirmPasswordError: '' })}\n                      invalid={confirmPasswordError ? true : false} />\n                  </InputGroup>\n                </Form>\n                <FormFeedback>{confirmPasswordError}</FormFeedback>\n              </FormGroup>\n              {alert.message && <Alert color={alert.type}>{alert.message}</Alert>}\n              <Button\n                className='bg-blue text-white border-0 w-90 my-4 py-2'\n                onClick={this.resetPassword}\n                loading={sending}\n                disabled={sending}>\n                <span className='nav-link-inner--text ml-1 f-family-poppins'>\n                  Reset Password\n                </span>\n              </Button>\n            </Card>\n          </Col>\n        </Row>\n        <img alt='...' src={require('assets/img/png/login-right.png')} className='login-right-img' />\n      </div>\n    )\n  }\n}\n","import React from 'react';\r\nimport { CardElement, ElementsConsumer } from '@stripe/react-stripe-js';\r\n\r\nconst CARD_ELEMENT_OPTIONS = {\r\n  style: {\r\n    base: {\r\n      color: \"#32325d\",\r\n      fontFamily: 'Poppins',\r\n      fontSize: '16px',\r\n      fontWeight: 400,\r\n      fontSmoothing: 'antialiased',\r\n      \"::placeholder\": {\r\n        color: \"#aab7c4\",\r\n      },\r\n    },\r\n    invalid: {\r\n      color: \"#fa755a\",\r\n      iconColor: \"#fa755a\",\r\n    },\r\n  },\r\n};\r\n\r\nclass CardSection extends React.Component {\r\n  render() {\r\n    const { stripe } = this.props;\r\n    return (\r\n        <div style={{border: '1px solid #B6B6BA'}} className='px-4 py-2 shadow-sm mt-3 mb-3'>\r\n            <CardElement options={CARD_ELEMENT_OPTIONS} onReady={(element) => this.props.onCardElementReady(stripe, element)} />\r\n        </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport const InjectedCardSection = ({ onCardElementReady }) => (\r\n  <ElementsConsumer>\r\n    {({elements, stripe}) => (\r\n      <CardSection elements={elements} stripe={stripe} onCardElementReady={onCardElementReady} />\r\n    )}\r\n  </ElementsConsumer>\r\n)","import React from 'react';\nimport { Modal, ModalBody } from 'reactstrap';\nimport { Checkbox } from 'react-input-checkbox';\nimport Button from 'reactstrap-button-loader';\n\nexport default class SignUpDoneModal extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      checked: false\n    }\n  }\n\n  render() {\n    const { isOpen, onClose } = this.props;\n    const { checked } = this.state;\n    return (\n      <Modal isOpen={isOpen} centered>\n        <ModalBody className='d-flex flex-column align-items-center'>\n          <img alt='...' src={require('assets/img/png/homepage-logo.png')} width={400} className=\"mt-5 mb-5\" />\n          <img\n            alt='...'\n            src={require('assets/img/svg/check-circle.svg')}\n            width={150}\n            height={150}\n            className='my-5' />\n          <div className='text-center'>\n            <p>\n            Thank you for registering, you will be notified\n            </p>\n            <p>once your registration is approved, you will\n            </p>\n            <p>then be able to login and start scheduling!</p>\n          </div>\n          <div className='d-flex flex-fill mt-4'>\n            <Checkbox\n              theme='bootstrap-checkbox'\n              value={checked}\n              onChange={() => this.setState({ checked: !this.state.checked })}\n              children={<span />}\n              />\n            <h6 className='ml-2 text-darkgray' style={{ cursor: 'pointer' }}\n              onClick={() => this.setState({ checked: !this.state.checked })}>I understand</h6>\n          </div>\n          <Button className='bg-blue text-white border-0 w-90 my-4 py-2' onClick={onClose} disabled={!checked}>\n            <strong>OK</strong>\n          </Button>\n        </ModalBody>\n      </Modal>\n    )\n  }\n}\n","import React from 'react';\r\nimport { Alert, Row, Col, Form } from 'reactstrap';\r\nimport Button from 'reactstrap-button-loader';\r\nimport APIs from 'APIs';\r\nimport { InjectedCardSection } from 'components/InjectedCardSection';\r\nimport ls from 'local-storage';\r\nimport SignUpDoneModal from 'modals/SignUpDoneModal';\r\n\r\nexport default class SubscriptionPayment extends React.Component {\r\n\r\n    constructor(props) {\r\n      super(props);\r\n\r\n      this.state = {\r\n        plan: 'monthly',\r\n        payment_method: 'card',\r\n        monthly_price: 0,\r\n        quarterly_price: 0,\r\n        biyearly_price: 0,\r\n        stripe: undefined,\r\n        cardElement: undefined,\r\n        subscribing: false,\r\n        alert: {\r\n          type: '',\r\n          message: ''\r\n        },\r\n        doneSubscribe: false\r\n      }\r\n\r\n      this.onGetSubscriptionOptions();\r\n    }\r\n\r\n    onGetSubscriptionOptions() {\r\n      APIs.getSubscriptionOptions().then(resp => {\r\n        let { data } = resp.data;\r\n        this.setState({ monthly_price: data.monthly_price, quarterly_price: data.quarterly_price, biyearly_price: data.biyearly_price });\r\n      });\r\n    }\r\n\r\n    handlePaymentThatRequiresCustomerAction = ({ subscription, invoice, priceId, stripeCustomerId, paymentMethodId, plan, isRetry }) => {\r\n      if (subscription && subscription.status === 'active') {\r\n        // Subscription is active, no customer actions required.\r\n        return { subscription, priceId, paymentMethodId, plan, stripeCustomerId };\r\n      }\r\n      // If it's a first payment attempt, the payment intent is on the subscription latest invoice.\r\n      // If it's a retry, the payment intent will be on the invoice itself.\r\n      console.log('Invoice: ', invoice);\r\n      let paymentIntent = invoice ? invoice.payment_intent : subscription.latest_invoice.payment_intent;\r\n  \r\n      if (paymentIntent.status === 'requires_action' || (isRetry === true && paymentIntent.status === 'requires_payment_method')) {\r\n        return this.state.stripe.confirmCardPayment(paymentIntent.client_secret, {\r\n          payment_method: paymentMethodId,\r\n        })\r\n        .then((result) => {\r\n          if (result.error) {\r\n            // Start code flow to handle updating the payment details.\r\n            // Display error message in your UI.\r\n            // The card was declined (i.e. insufficient funds, card has expired, etc).\r\n            throw new Error(result.error.message);\r\n          } else {\r\n            if (result.paymentIntent.status === 'succeeded') {\r\n              // Show a success message to your customer.\r\n              // There's a risk of the customer closing the window before the callback.\r\n              // We recommend setting up webhook endpoints later in this guide.\r\n              return {\r\n                priceId,\r\n                subscription,\r\n                invoice,\r\n                paymentMethodId,\r\n                plan,\r\n                stripeCustomerId\r\n              };\r\n            }\r\n          }\r\n        })\r\n        .catch(err => {\r\n          throw err;\r\n        })\r\n      } else {\r\n        // No customer action needed.\r\n        return { subscription, priceId, paymentMethodId, stripeCustomerId, plan };\r\n      }\r\n    }\r\n  \r\n    handleRequiresPaymentMethod = ({ subscription, paymentMethodId, priceId, plan, stripeCustomerId }) => {\r\n      console.log('Handle requires payment method');\r\n      if (subscription && subscription.status === 'active') {\r\n        // subscription is active, no customer actions required.\r\n        return { subscription, priceId, paymentMethodId, plan, stripeCustomerId };\r\n      } else if (subscription.latest_invoice.payment_intent.status === 'requires_payment_method') {\r\n        // Using localStorage to manage the state of the retry here,\r\n        // feel free to replace with what you prefer.\r\n        // Store the latest invoice ID and status.\r\n        ls.set('latestStripeCustomerId', stripeCustomerId);\r\n        ls.set('latestPlan', plan);\r\n        ls.set('latestPriceId', priceId);\r\n        ls.set('latestInvoiceId', subscription.latest_invoice.id);\r\n        ls.set('latestInvoicePaymentIntentStatus', subscription.latest_invoice.payment_intent.status);\r\n        throw new Error('Your card was declined')\r\n      } else {\r\n        return { subscription, priceId, paymentMethodId, plan, stripeCustomerId };\r\n      }\r\n    }\r\n  \r\n    retryInvoiceWithNewPaymentMethod = ({ stripeCustomerId, paymentMethodId, invoiceId, priceId, plan }) => {\r\n      const params = {\r\n        stripeCustomerId,\r\n        paymentMethodId,\r\n        invoiceId,\r\n      };\r\n  \r\n      APIs.retrySubscriptionInvoice(params).then(resp => {\r\n        console.log('Retry subscription: ', resp.data);\r\n        const invoice = resp.data.data;\r\n        return {\r\n          // Use the Stripe 'object' property on the\r\n          // returned result to understand what object is returned.\r\n          invoice,\r\n          stripeCustomerId,\r\n          paymentMethodId,\r\n          priceId,\r\n          plan,\r\n          isRetry: true,\r\n        };\r\n      })\r\n      .then(this.handlePaymentThatRequiresCustomerAction)\r\n      .then(this.onSubscriptionComplete)\r\n      .catch(err => {\r\n        this.setState({ alert: { type: 'danger', message: err.message }, subscribing: false });\r\n      });\r\n    }\r\n\r\n    onSubscriptionComplete = (result) => {\r\n      const { userId } = this.props.location.state;\r\n      // Payment was successful.\r\n      this.setState({ subscribing: false });\r\n      ls.set('latestStripeCustomerId', null);\r\n      ls.set('latestPlan', null);\r\n      ls.set('latestPriceId', null);\r\n      ls.set('latestInvoiceId', null);\r\n      ls.set('latestInvoicePaymentIntentStatus', null);\r\n      if (result.subscription && result.subscription.status === 'active') {\r\n        // Change your UI to show a success message to your customer.\r\n        // Call your backend to grant access to your service based on\r\n        // `result.subscription.items.data[0].price.product` the customer subscribed to.\r\n        const params = {\r\n          userId: userId,\r\n          stripeCustomerId: result.stripeCustomerId,\r\n          subscriptionId: result.subscription.id,\r\n          plan: result.plan\r\n        }\r\n        APIs.updateSubscriptionStatus(params).then(resp => {\r\n          //this.props.updateUser({ ...this.props.user, subscriptionId: result.subscription.id, subscribedPlan: result.plan });\r\n          this.setState({doneSubscribe: true});\r\n        }).catch(err => {\r\n          let message = err.message;\r\n          if (err.response) {\r\n            message = err.response.data.message;\r\n          }\r\n          this.setState({ alert: { type: 'danger', message }, subscribing: false });\r\n        });\r\n      }\r\n    }\r\n  \r\n    onConfirm = async() => {\r\n      const { stripe, cardElement, plan } = this.state;\r\n      if (!stripe || !cardElement ) {\r\n        return;\r\n      }\r\n      this.setState({ subscribing: true, alert: { type: '', message: '' } });\r\n      // If a previous payment was attempted, get the latest invoice\r\n      const latestInvoicePaymentIntentStatus = ls.get('latestInvoicePaymentIntentStatus');\r\n      const pStripeCustomerId = ls.get('latestStripeCustomerId');\r\n      const latestPlan = ls.get('latestPlan');\r\n\r\n      const { error, paymentMethod } = await stripe.createPaymentMethod({ type: 'card', card: cardElement });\r\n\r\n      if (error) {\r\n        this.setState({ subscribing: false, alert: { type: 'danger', message: error.message } });\r\n        console.log('Create Payment method error: ', error);\r\n      } else {\r\n        const paymentMethodId = paymentMethod.id;\r\n        const { stripeCustomerId } = this.props.location.state;\r\n        if (pStripeCustomerId === stripeCustomerId && latestPlan === plan && latestInvoicePaymentIntentStatus === 'requires_payment_method' ) {\r\n          // Update the payment method and retry invoice payment\r\n          const invoiceId = ls.get('latestInvoiceId');\r\n          const priceId = ls.get('latestPriceId');\r\n          console.log('Retry last invoice : ', invoiceId);\r\n          this.retryInvoiceWithNewPaymentMethod({ stripeCustomerId, paymentMethodId, invoiceId, priceId });\r\n        } else {\r\n          // Create the subscription\r\n          // this.createSubscription({ customerId, paymentMethodId, priceId });\r\n          const params = { stripeCustomerId, plan, paymentMethodId };\r\n          APIs.createStripeSubscription(params).then(resp => {\r\n            const subscription = resp.data.data;\r\n            return {\r\n              paymentMethodId: paymentMethodId, priceId: subscription.items.data[0].price.id, stripeCustomerId: params.stripeCustomerId,\r\n              plan, subscription: subscription,\r\n            }\r\n          })\r\n          .then(this.handlePaymentThatRequiresCustomerAction)\r\n          .then(this.handleRequiresPaymentMethod)\r\n          .then(this.onSubscriptionComplete)\r\n          .catch(err => {\r\n            let message = err.message;\r\n            if (err.response) {\r\n              message = err.response.data.message;\r\n            }\r\n            this.setState({ alert: { type: 'danger', message }, subscribing: false });\r\n          });\r\n        }\r\n      }\r\n    };\r\n\r\n    onCardElementReady = (stripe, cardElement) => {\r\n      this.setState({ stripe, cardElement });\r\n    }\r\n\r\n    render() {\r\n      const {plan, payment_method, monthly_price, quarterly_price, biyearly_price, alert, subscribing, doneSubscribe} = this.state;\r\n      const priceFont = {float: 'right', color: '#364954', fontWeight: 'bold', fontSize: 18};\r\n      const nonSelectedRadioBorder = {border: '1px solid #B6B6BA'};\r\n      const selectedRadioBorder = {border: '2px solid #45BCEC'};\r\n      \r\n      return (\r\n        <div className='d-flex flex-column flex-fill align-items-center justify-content-center px-lg-4'>\r\n            <img alt='...' src={require('assets/img/svg/stripe_subscription_left.svg')} className='stripe-subscription-left-img' />\r\n            <img alt='...' src={require('assets/img/svg/stripe_subscription_right.svg')} className='stripe-subscription-right-img' />\r\n            <img alt='...' src={require('assets/img/png/homepage-logo.png')} width={350} className='my-5' />\r\n            <div className='col-lg-6 col-10 border-1 px-lg-5' style={{border: '0.7px solid rgb(50, 75, 77, 0.7)', background: 'rgb(255, 255, 255, 0.8)'}}>\r\n              <h6 className='mt-5' style={{fontWeight: 'bold'}}>Choose Plan</h6>\r\n              <Form className='mt-4'>\r\n                <div style={plan===0 ? selectedRadioBorder:nonSelectedRadioBorder} className='px-4 py-2 shadow-sm'>\r\n                  <input type=\"radio\" name=\"plan\" className='mr-4' checked={plan==='monthly'} onChange={e=>this.setState({plan: 'monthly'})} />\r\n                  <label className='mb-0'>Monthly</label>\r\n                  <label style={priceFont}>${monthly_price}</label>\r\n                </div>\r\n                <div style={plan===1 ? selectedRadioBorder:nonSelectedRadioBorder} className='px-4 py-2 mt-3 shadow-sm'>\r\n                  <input type=\"radio\" name=\"plan\" className='mr-4' checked={plan==='quarterly'} onChange={e=>this.setState({plan: 'quarterly'})} />\r\n                  <label className='mb-0'>Quarterly</label>\r\n                  <label style={priceFont}>${quarterly_price}</label>\r\n                </div>\r\n                <div style={plan===2 ? selectedRadioBorder:nonSelectedRadioBorder} className='px-4 py-2 mt-3 shadow-sm'>\r\n                  <input type=\"radio\" name=\"plan\" className='mr-4' checked={plan==='biyearly'} onChange={e=>this.setState({plan: 'biyearly'})} />\r\n                  <label className='mb-0'>Bi-Yearly</label>\r\n                  <label style={priceFont}>${biyearly_price}</label>\r\n                </div>\r\n              </Form>\r\n              <hr className='my-5' style={{ color: '##E8E8EA' }} />\r\n              <h6 style={{fontWeight: 'bold'}}>Choose payment method</h6>\r\n              <Row className='mt-4'>\r\n                <Col lg='6' sm='6' style={{textAlign: 'center'}}>\r\n                  <img alt='...' src={require('assets/img/svg/card.svg')} height={25}  />\r\n                  <div>\r\n                    <input type=\"radio\" name=\"method\" className='mr-2' checked={payment_method==='card'} onChange={e=>this.setState({payment_method: 'card'})}/>\r\n                    <label className='mb-0'>Credit Card</label>\r\n                  </div>\r\n                </Col>\r\n                <Col lg='6' sm='6' style={{textAlign: 'center'}}>\r\n                  <img alt='...' src={require('assets/img/svg/paypal.svg')} height={25}  />\r\n                  <div>\r\n                    <input type=\"radio\" name=\"method\" className='mr-2' checked={payment_method==='paypal'} onChange={e=>this.setState({payment_method: 'paypal'})} />\r\n                    <label className='mb-0'>Paypal</label>\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n\r\n              {payment_method==='card' &&\r\n                <InjectedCardSection onCardElementReady={this.onCardElementReady} />\r\n              }\r\n              { alert.message && <Alert color={alert.type} className='mt-3'>{alert.message}</Alert> }\r\n              <Button type=\"submit\" className='bg-blue text-white border-0 w-100 mt-3 mb-5' onClick={this.onConfirm} loading={subscribing} disabled={subscribing}>\r\n                <strong>CONFIRM</strong>\r\n              </Button>\r\n            </div>\r\n            {\r\n            doneSubscribe &&\r\n            <SignUpDoneModal\r\n                isOpen={doneSubscribe}\r\n                onClose={() => this.setState({ doneSubscribe: false }, () => this.props.history.push('/sign-in'))} />\r\n            }\r\n        </div>\r\n      );\r\n    }\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { handleActions } from 'redux-actions';\nconst initialState = {\n  id: 0,\n  name: undefined,\n  email: undefined,\n  phoneNumber: undefined,\n  aptNumber: undefined,\n  aptColorHex: undefined,\n  buildingName: undefined,\n  buildingId: undefined,\n  registrationCapacity: undefined,\n  role: undefined,\n  confirmed: 0,\n  phone_verify: 0,\n  stripeCustomerId: undefined,\n  subscriptionId: undefined,\n  subscribedPlan: undefined,\n  subscribedAt: undefined,\n  booking_limit: undefined,\n  createdAt: undefined\n}\n\nexport default handleActions({\n  updateUser: (state, action) => ({ ...state, ...action.payload })\n}, initialState);\n","import { applyMiddleware, createStore, combineReducers, compose } from 'redux';\nimport logger from 'redux-logger';\nimport { persistStore, persistReducer } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage' // defaults to localStorage for web\nimport user from './user/reducer';\n\nexport default function configureStore() {\n  const isDev = !process.env.NODE_ENV || process.env.NODE_ENV === 'development';\n  const middlewares = [isDev && logger].filter(Boolean);\n  const middlewareEnhancers = applyMiddleware(...middlewares);\n\n  const enhancers = [middlewareEnhancers];\n  const composedEnhancers = compose(...enhancers);\n\n  const rootReducers = combineReducers({\n    user\n  });\n\n  const persistConfig = {\n    key: '740_gym',\n    storage\n  }\n\n  const persistedReducer = persistReducer(persistConfig, rootReducers);\n\n  const store = createStore(persistedReducer, undefined, composedEnhancers);\n  const persistor = persistStore(store);\n\n  return { store, persistor };\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react'\nimport { Router, Switch, Route, Redirect } from 'react-router-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'assets/gym-styles.scss';\nimport 'react-input-checkbox/lib/react-input-checkbox.min.css';\nimport \"react-datetime/css/react-datetime.css\";\nimport SignUp from 'containers/SignUp';\nimport SignIn from 'containers/SignIn';\nimport SignUpPhoneVerify from 'containers/SignUpPhoneVerification';\nimport SignInPhoneVerify from 'containers/SignInPhoneVerification';\nimport Homepage from 'containers/Homepage';\nimport ForgotPassword from 'containers/ForgotPassword';\nimport Dashboard from 'containers/Dashboard';\nimport ResetPassword from 'containers/ResetPassword';\nimport SubscriptionPayment from 'containers/SubscriptionPayment';\nimport history from './history.js';\nimport HttpsRedirect from 'react-https-redirect';\nimport * as serviceWorker from './serviceWorker';\nimport configureStore from './redux/index.js';\nimport { Elements } from '@stripe/react-stripe-js';\nimport { loadStripe } from '@stripe/stripe-js';\n\nconst { store, persistor } = configureStore();\nconst stripePromise = loadStripe('pk_test_51HiAlsD4eoVJD4iBXmUi7zetFEPJqfWLgOyYKGLrIvnCKcqtT8qgKsCh62va726wNv2GAghAyjgPpetKJeXu9FkA00MS3li0aK');\nconst rootElement = document.getElementById(\"root\");\nconst rootDOM = (\n  <Elements stripe={stripePromise} options={{\n    fonts: [\n      {\n        cssSrc:\n          \"https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;700&display=swap\"\n      }\n    ]\n  }}>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <HttpsRedirect>\n          <Router history={history}>\n            <Switch>\n              <Route path=\"/\"\n                exact\n                component={Homepage} />\n              <Route\n                path=\"/sign-up\"\n                exact\n                component={SignUp} />\n              <Route\n                path='/sign-in'\n                exact\n                component={SignIn} />\n              <Route\n                path='/forgot-password'\n                exact\n                component={ForgotPassword} />\n              <Route\n                path='/dashboard'\n                exact\n                component={Dashboard} />\n              <Route\n                path='/reset/:id/:token'\n                exact\n                render={props => <ResetPassword {...props} />} />\n              <Route\n                path='/signup-phone-confirm'\n                exact\n                component={SignUpPhoneVerify} />\n              <Route\n                path='/signin-phone-confirm'\n                exact\n                component={SignInPhoneVerify} />\n              <Route\n                path='/signup-subscription'\n                exact\n                component={SubscriptionPayment} />\n              <Redirect to=\"/\" />\n            </Switch>\n          </Router>\n        </HttpsRedirect>\n      </PersistGate>\n    </Provider>\n  </Elements>\n);\n\nif (rootElement.hasChildNodes()) {\n  ReactDOM.hydrate(rootDOM, rootElement);\n} else {\n  ReactDOM.render(rootDOM, rootElement);\n}\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/padlock.698a28fd.svg\";","module.exports = __webpack_public_path__ + \"static/media/login-left.976638d7.png\";"],"sourceRoot":""}